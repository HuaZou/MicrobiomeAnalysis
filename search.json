[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2022 Hua Zou  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. MicrobiomeAnalysis Copyright (C) 2022 Hua Zou This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/articles/Introduction.html","id":"overview-of-microbiomeanalysis","dir":"Articles","previous_headings":"","what":"Overview of MicrobiomeAnalysis","title":"MicrobiomeAnalysis: A comprehensive R package for managing and analyzing microbiome data","text":"Overview MicrobiomeAnalysis","code":""},{"path":[]},{"path":"/articles/Introduction.html","id":"inputs-from-dada2","dir":"Articles","previous_headings":"Convert inputs into phyloseq-class object","what":"inputs from dada2","title":"MicrobiomeAnalysis: A comprehensive R package for managing and analyzing microbiome data","text":"","code":"seq_tab <- readRDS(   system.file(\"extdata\", \"dada2_seqtab.rds\",      package = \"MicrobiomeAnalysis\"))  tax_tab <- readRDS(   system.file(\"extdata\", \"dada2_taxtab.rds\",     package = \"MicrobiomeAnalysis\"))  sam_tab <- read.table(   system.file(\"extdata\", \"dada2_samdata.txt\",      package = \"MicrobiomeAnalysis\"),    sep = \"\\t\", header = TRUE, row.names = 1)  ps <- import_dada2(seq_tab = seq_tab, tax_tab = tax_tab, sam_tab = sam_tab)  ps ## phyloseq-class experiment-level object ## otu_table()   OTU Table:         [ 232 taxa and 20 samples ] ## sample_data() Sample Data:       [ 20 samples by 4 sample variables ] ## tax_table()   Taxonomy Table:    [ 232 taxa by 6 taxonomic ranks ] ## refseq()      DNAStringSet:      [ 232 reference sequences ]"},{"path":"/articles/Introduction.html","id":"inputs-from-qiime2","dir":"Articles","previous_headings":"Convert inputs into phyloseq-class object","what":"inputs from qiime2","title":"MicrobiomeAnalysis: A comprehensive R package for managing and analyzing microbiome data","text":"","code":"otuqza_file <- system.file(      \"extdata\", \"table.qza\",      package = \"MicrobiomeAnalysis\")  taxaqza_file <- system.file(      \"extdata\", \"taxonomy.qza\",      package = \"MicrobiomeAnalysis\")  sample_file <- system.file(      \"extdata\", \"sample-metadata.tsv\",      package = \"MicrobiomeAnalysis\")  treeqza_file <- system.file(      \"extdata\", \"tree.qza\",      package = \"MicrobiomeAnalysis\")   ps_object <- import_qiime2(      otu_qza = otuqza_file, taxa_qza = taxaqza_file,      sam_tab = sample_file, tree_qza = treeqza_file) ps_object ## phyloseq-class experiment-level object ## otu_table()   OTU Table:         [ 770 taxa and 34 samples ] ## sample_data() Sample Data:       [ 34 samples by 9 sample variables ] ## tax_table()   Taxonomy Table:    [ 770 taxa by 7 taxonomic ranks ] ## phy_tree()    Phylogenetic Tree: [ 770 tips and 768 internal nodes ]"},{"path":[]},{"path":"/articles/Introduction.html","id":"extract-specific-levels-phyloseq-class-object","dir":"Articles","previous_headings":"Data Processing","what":"Extract specific levels phyloseq-class object","title":"MicrobiomeAnalysis: A comprehensive R package for managing and analyzing microbiome data","text":"","code":"ps_genus <- aggregate_taxa(ps_object, level = \"Genus\") ps_genus ## phyloseq-class experiment-level object ## otu_table()   OTU Table:         [ 198 taxa and 34 samples ] ## sample_data() Sample Data:       [ 34 samples by 9 sample variables ] ## tax_table()   Taxonomy Table:    [ 198 taxa by 7 taxonomic ranks ]"},{"path":"/articles/Introduction.html","id":"summarize-the-specific-taxonomic-levels","dir":"Articles","previous_headings":"Data Processing","what":"Summarize the specific taxonomic levels","title":"MicrobiomeAnalysis: A comprehensive R package for managing and analyzing microbiome data","text":"Kingdom specific taxonomic levels (Phylum)","code":"ps_summarize_genus <- summarize_taxa(ps_object, level = \"Genus\") ps_summarize_genus ## phyloseq-class experiment-level object ## otu_table()   OTU Table:         [ 628 taxa and 34 samples ] ## sample_data() Sample Data:       [ 34 samples by 9 sample variables ] ## tax_table()   Taxonomy Table:    [ 628 taxa by 1 taxonomic ranks ]"},{"path":"/articles/Introduction.html","id":"multivariate-community-analysis","dir":"Articles","previous_headings":"","what":"Multivariate Community Analysis","title":"MicrobiomeAnalysis: A comprehensive R package for managing and analyzing microbiome data","text":"Know details aftermentioned statistical methods see (Xia et al. 2018).","code":""},{"path":"/articles/Introduction.html","id":"multivariate-homogeneity-of-groups-dispersions-variances","dir":"Articles","previous_headings":"Multivariate Community Analysis","what":"Multivariate homogeneity of groups dispersions (variances)","title":"MicrobiomeAnalysis: A comprehensive R package for managing and analyzing microbiome data","text":"(Anderson, Ellingsen, McArdle 2006)","code":"run_betadisper(ps_object, variable = \"body.site\", method = \"bray\") ##  ## Permutation test for homogeneity of multivariate dispersions ## Permutation: free ## Number of permutations: 999 ##  ## Response: Distances ##           Df  Sum Sq  Mean Sq     F N.Perm Pr(>F)    ## Groups     3 0.30323 0.101077 13.08    999  0.002 ** ## Residuals 30 0.23184 0.007728                        ## --- ## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 ##  ## Pairwise comparisons: ## (Observed p-value below diagonal, permuted p-value above diagonal) ##                   gut  left palm right palm tongue ## gut                   2.0000e-02 1.0000e-03  0.341 ## left palm  1.4486e-02            9.3000e-02  0.013 ## right palm 1.6126e-05 8.7427e-02             0.001 ## tongue     3.3527e-01 9.9835e-03 6.9602e-05"},{"path":"/articles/Introduction.html","id":"permutational-multivariate-analysis-of-variance-permanova","dir":"Articles","previous_headings":"Multivariate Community Analysis","what":"Permutational Multivariate Analysis of Variance (PERMANOVA)","title":"MicrobiomeAnalysis: A comprehensive R package for managing and analyzing microbiome data","text":"(Anderson 2014)","code":"run_PERMANOVA(ps_object, method = \"bray\") ##                             SumsOfSample Df  SumsOfSqs   MeanSqs   F.Model ## SampleID                              34 33 12.9821194 0.3933976 0.0000000 ## sample.id                             34 33 12.9821194 0.3933976 0.0000000 ## barcode.sequence                      34 33 12.9821194 0.3933976 0.0000000 ## body.site                             34  3  5.1920140 1.7306713 6.6648828 ## year                                  34  1  0.5744677 0.5744677 1.4815830 ## month                                 34  4  1.3733243 0.3433311 0.8576774 ## day                                   34  3  1.1036246 0.3678749 0.9290946 ## subject                               34  1  0.7852501 0.7852501 2.0602011 ## reported.antibiotic.usage             34  1  0.5744677 0.5744677 1.4815830 ## days.since.experiment.start           34  4  1.3733243 0.3433311 0.8576774 ##                                     R2 Pr(>F) AdjustedPvalue ## SampleID                    1.00000000  1.000          1.000 ## sample.id                   1.00000000  1.000          1.000 ## barcode.sequence            1.00000000  1.000          1.000 ## body.site                   0.39993577  0.001          0.010 ## year                        0.04425069  0.146          0.365 ## month                       0.10578584  0.717          1.000 ## day                         0.08501112  0.582          1.000 ## subject                     0.06048705  0.034          0.170 ## reported.antibiotic.usage   0.04425069  0.146          0.365 ## days.since.experiment.start 0.10578584  0.717          1.000"},{"path":"/articles/Introduction.html","id":"mantel-test-mantel","dir":"Articles","previous_headings":"Multivariate Community Analysis","what":"Mantel Test (MANTEL)","title":"MicrobiomeAnalysis: A comprehensive R package for managing and analyzing microbiome data","text":"(Mantel 1967)","code":"run_MANTEL(ps_object,            y_variables = \"body.site\",            z_variables = c(\"subject\", \"reported.antibiotic.usage\"),            norm = FALSE,            method = \"mantel.partial\",            method_dist = c(\"bray\", \"euclidean\", \"jaccard\")) ##  ## Partial Mantel statistic based on Spearman's rank correlation rho  ##  ## Call: ## vegan::mantel.partial(xdis = x_dis, ydis = y_dis, zdis = z_dis,      method = method_cor, permutations = 999)  ##  ## Mantel statistic r: 0.563  ##       Significance: 0.001  ##  ## Upper quantiles of permutations (null model): ##    90%    95%  97.5%    99%  ## 0.0578 0.0779 0.0994 0.1285  ## Permutation: free ## Number of permutations: 999"},{"path":"/articles/Introduction.html","id":"analysis-of-similarity-anosim","dir":"Articles","previous_headings":"Multivariate Community Analysis","what":"Analysis of Similarity (ANOSIM)","title":"MicrobiomeAnalysis: A comprehensive R package for managing and analyzing microbiome data","text":"(Clarke 1993)","code":"run_ANOSIM(ps_object, variable = \"body.site\", method = \"bray\") ##  ## Call: ## vegan::anosim(x = dis, grouping = datphe, permutations = 999)  ## Dissimilarity: bray  ##  ## ANOSIM statistic R: 0.6855  ##       Significance: 0.001  ##  ## Permutation: free ## Number of permutations: 999"},{"path":"/articles/Introduction.html","id":"multi-response-permutation-procedures-mrpp","dir":"Articles","previous_headings":"Multivariate Community Analysis","what":"Multi-response Permutation Procedures (MRPP)","title":"MicrobiomeAnalysis: A comprehensive R package for managing and analyzing microbiome data","text":"(Mielke Jr 1991)","code":"run_MRPP(ps_object, variable = \"body.site\", method = \"bray\") ##  ## Call: ## vegan::mrpp(dat = dis, grouping = datphe, permutations = 999)  ##  ## Dissimilarity index: bray  ## Weights for groups:  n  ##  ## Class means and counts: ##  ##       gut    left palm right palm tongue ## delta 0.5657 0.7732    0.8839     0.5273 ## n     8      8         9          9      ##  ## Chance corrected within-group agreement A: 0.2085  ## Based on observed delta 0.6886 and expected delta 0.8699  ##  ## Significance of delta: 0.001  ## Permutation: free ## Number of permutations: 999"},{"path":[]},{"path":"/articles/Introduction.html","id":"aldex","dir":"Articles","previous_headings":"Differential analysis","what":"Aldex","title":"MicrobiomeAnalysis: A comprehensive R package for managing and analyzing microbiome data","text":"","code":"ps_genus_group <- phyloseq::subset_samples(      ps_genus,      body.site %in% c(\"gut\", \"tongue\"))  run_aldex(ps_genus_group, group = \"body.site\", taxa_rank = \"Phylum\") ## microbiomeMarker-class inherited from phyloseq-class ## normalization method:              [ none ] ## microbiome marker identity method: [ ALDEx2_kruskal ] ## marker_table() Marker Table:       [ 11 microbiome markers with 5 variables ] ## otu_table()    OTU Table:          [ 222 taxa and  32 samples ] ## sample_data()  Sample Data:        [ 32 samples by  9 sample variables ] ## tax_table()    Taxonomy Table:     [ 222 taxa by 1 taxonomic ranks ]"},{"path":"/articles/Introduction.html","id":"limma-voom","dir":"Articles","previous_headings":"Differential analysis","what":"limma-voom","title":"MicrobiomeAnalysis: A comprehensive R package for managing and analyzing microbiome data","text":"","code":"run_limma_voom(ps_genus_group, group = \"body.site\", taxa_rank = \"Phylum\") ## microbiomeMarker-class inherited from phyloseq-class ## normalization method:              [ none ] ## microbiome marker identity method: [ limma_voom ] ## marker_table() Marker Table:       [ 5 microbiome markers with 5 variables ] ## otu_table()    OTU Table:          [ 7 taxa and  17 samples ] ## sample_data()  Sample Data:        [ 17 samples by  9 sample variables ] ## tax_table()    Taxonomy Table:     [ 7 taxa by 1 taxonomic ranks ]"},{"path":"/articles/Introduction.html","id":"ancom","dir":"Articles","previous_headings":"Differential analysis","what":"ANCOM","title":"MicrobiomeAnalysis: A comprehensive R package for managing and analyzing microbiome data","text":"","code":"data(\"enterotypes_arumugam\") ps_enterotypes <- phyloseq::subset_samples(      enterotypes_arumugam,      Enterotype %in% c(\"Enterotype 3\", \"Enterotype 2\")) run_ancom(ps_enterotypes, group = \"Enterotype\") ## microbiomeMarker-class inherited from phyloseq-class ## normalization method:              [ TSS ] ## microbiome marker identity method: [ ANCOM ] ## marker_table() Marker Table:       [ 13 microbiome markers with 4 variables ] ## otu_table()    OTU Table:          [ 235 taxa and  24 samples ] ## sample_data()  Sample Data:        [ 24 samples by  9 sample variables ] ## tax_table()    Taxonomy Table:     [ 235 taxa by 1 taxonomic ranks ]"},{"path":"/articles/Introduction.html","id":"ancombc","dir":"Articles","previous_headings":"Differential analysis","what":"ANCOMBC","title":"MicrobiomeAnalysis: A comprehensive R package for managing and analyzing microbiome data","text":"","code":"run_ancombc(ps_enterotypes, group = \"Enterotype\", confounders = \"Gender\") ## microbiomeMarker-class inherited from phyloseq-class ## normalization method:              [ none ] ## microbiome marker identity method: [ ancombc ] ## marker_table() Marker Table:       [ no microbiome markers were identified ] ## otu_table()    OTU Table:          [ 235 taxa and  24 samples ] ## sample_data()  Sample Data:        [ 24 samples by  9 sample variables ] ## tax_table()    Taxonomy Table:     [ 235 taxa by 1 taxonomic ranks ]"},{"path":"/articles/Introduction.html","id":"deseq2","dir":"Articles","previous_headings":"Differential analysis","what":"DESeq2","title":"MicrobiomeAnalysis: A comprehensive R package for managing and analyzing microbiome data","text":"","code":"run_deseq2(ps_enterotypes, group = \"Enterotype\") ## microbiomeMarker-class inherited from phyloseq-class ## normalization method:              [ RLE ] ## microbiome marker identity method: [ DESeq2: Wald ] ## marker_table() Marker Table:       [ 16 microbiome markers with 5 variables ] ## otu_table()    OTU Table:          [ 235 taxa and  24 samples ] ## sample_data()  Sample Data:        [ 24 samples by  10 sample variables ] ## tax_table()    Taxonomy Table:     [ 235 taxa by 1 taxonomic ranks ]"},{"path":"/articles/Introduction.html","id":"edger","dir":"Articles","previous_headings":"Differential analysis","what":"edgeR","title":"MicrobiomeAnalysis: A comprehensive R package for managing and analyzing microbiome data","text":"","code":"run_edger(ps_enterotypes, group = \"Enterotype\") ## microbiomeMarker-class inherited from phyloseq-class ## normalization method:              [ TMM ] ## microbiome marker identity method: [ edgeR: LRT ] ## marker_table() Marker Table:       [ 34 microbiome markers with 5 variables ] ## otu_table()    OTU Table:          [ 235 taxa and  24 samples ] ## sample_data()  Sample Data:        [ 24 samples by  10 sample variables ] ## tax_table()    Taxonomy Table:     [ 235 taxa by 1 taxonomic ranks ]"},{"path":"/articles/Introduction.html","id":"lefse","dir":"Articles","previous_headings":"Differential analysis","what":"lefse","title":"MicrobiomeAnalysis: A comprehensive R package for managing and analyzing microbiome data","text":"","code":"run_lefse(ps_enterotypes, group = \"Enterotype\") ## microbiomeMarker-class inherited from phyloseq-class ## normalization method:              [ CPM ] ## microbiome marker identity method: [ lefse ] ## marker_table() Marker Table:       [ 14 microbiome markers with 5 variables ] ## otu_table()    OTU Table:          [ 235 taxa and  24 samples ] ## sample_data()  Sample Data:        [ 24 samples by  9 sample variables ] ## tax_table()    Taxonomy Table:     [ 235 taxa by 1 taxonomic ranks ]"},{"path":"/articles/Introduction.html","id":"metagenomeseq","dir":"Articles","previous_headings":"Differential analysis","what":"metagenomeSeq","title":"MicrobiomeAnalysis: A comprehensive R package for managing and analyzing microbiome data","text":"","code":"run_metagenomeseq(ps_enterotypes, group = \"Enterotype\") ## microbiomeMarker-class inherited from phyloseq-class ## normalization method:              [ CSS ] ## microbiome marker identity method: [ metagenomeSeq: ZILN ] ## marker_table() Marker Table:       [ 16 microbiome markers with 5 variables ] ## otu_table()    OTU Table:          [ 235 taxa and  24 samples ] ## sample_data()  Sample Data:        [ 24 samples by  10 sample variables ] ## tax_table()    Taxonomy Table:     [ 235 taxa by 1 taxonomic ranks ]"},{"path":"/articles/Introduction.html","id":"test_multiple_groups","dir":"Articles","previous_headings":"Differential analysis","what":"test_multiple_groups","title":"MicrobiomeAnalysis: A comprehensive R package for managing and analyzing microbiome data","text":"anova kruskal","code":"ps <- phyloseq::subset_samples(     enterotypes_arumugam,     Enterotype %in% c(\"Enterotype 3\", \"Enterotype 2\", \"Enterotype 1\"))  run_test_multiple_groups(ps, group = \"Enterotype\", method = \"anova\") ## microbiomeMarker-class inherited from phyloseq-class ## normalization method:              [ TSS ] ## microbiome marker identity method: [ anova ] ## marker_table() Marker Table:       [ 24 microbiome markers with 5 variables ] ## otu_table()    OTU Table:          [ 238 taxa and  32 samples ] ## sample_data()  Sample Data:        [ 32 samples by  9 sample variables ] ## tax_table()    Taxonomy Table:     [ 238 taxa by 1 taxonomic ranks ]"},{"path":"/articles/Introduction.html","id":"supervised-leaning-sl-methods","dir":"Articles","previous_headings":"Differential analysis","what":"supervised leaning (SL) methods","title":"MicrobiomeAnalysis: A comprehensive R package for managing and analyzing microbiome data","text":"logistic regression","code":"ps_small <- phyloseq::subset_taxa(     enterotypes_arumugam,     Phylum %in% c(\"Firmicutes\", \"Bacteroidetes\") )  mm <- run_sl(     ps_small,     group = \"Gender\",     taxa_rank = \"Genus\",     nfolds = 2,     nrepeats = 1,     top_n = 15,     norm = \"TSS\",     method = \"LR\")  mm ## microbiomeMarker-class inherited from phyloseq-class ## normalization method:              [ TSS ] ## microbiome marker identity method: [ logistic regression ] ## marker_table() Marker Table:       [ 15 microbiome markers with 3 variables ] ## otu_table()    OTU Table:          [ 91 taxa and  39 samples ] ## sample_data()  Sample Data:        [ 39 samples by  9 sample variables ] ## tax_table()    Taxonomy Table:     [ 91 taxa by 1 taxonomic ranks ]"},{"path":"/articles/Introduction.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"MicrobiomeAnalysis: A comprehensive R package for managing and analyzing microbiome data","text":"vignette created following conditions:","code":"sessionInfo() ## R version 4.1.2 (2021-11-01) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Big Sur 10.16 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.0.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] caret_6.0-91             lattice_0.20-45          conflicted_1.1.0         ## [4] MicrobiomeAnalysis_1.0.2 tibble_3.1.6             dplyr_1.0.8              ## [7] phyloseq_1.38.0          ggplot2_3.3.5            knitr_1.38               ##  ## loaded via a namespace (and not attached): ##   [1] systemfonts_1.0.4           plyr_1.8.7                  ##   [3] igraph_1.3.0                splines_4.1.2               ##   [5] listenv_0.8.0               BiocParallel_1.28.3         ##   [7] GenomeInfoDb_1.30.1         digest_0.6.29               ##   [9] foreach_1.5.2               htmltools_0.5.2             ##  [11] fansi_1.0.3                 magrittr_2.0.3              ##  [13] memoise_2.0.1               cluster_2.1.3               ##  [15] limma_3.50.1                globals_0.14.0              ##  [17] recipes_0.2.0               Biostrings_2.62.0           ##  [19] annotate_1.72.0             gower_1.0.0                 ##  [21] matrixStats_0.61.0          hardhat_0.2.0               ##  [23] metagenomeSeq_1.36.0        pkgdown_2.0.3               ##  [25] colorspace_2.0-3            blob_1.2.2                  ##  [27] textshaping_0.3.6           rbibutils_2.2.8             ##  [29] xfun_0.30                   crayon_1.5.1                ##  [31] RCurl_1.98-1.6              jsonlite_1.8.0              ##  [33] genefilter_1.76.0           survival_3.3-1              ##  [35] iterators_1.0.14            ape_5.6-2                   ##  [37] glue_1.6.2                  gtable_0.3.0                ##  [39] ipred_0.9-12                zlibbioc_1.40.0             ##  [41] XVector_0.34.0              DelayedArray_0.20.0         ##  [43] RcppZiggurat_0.1.6          Rhdf5lib_1.16.0             ##  [45] future.apply_1.8.1          shape_1.4.6                 ##  [47] BiocGenerics_0.40.0         scales_1.1.1                ##  [49] edgeR_3.36.0                DBI_1.1.2                   ##  [51] Rcpp_1.0.8.3                xtable_1.8-4                ##  [53] bit_4.0.4                   lava_1.6.10                 ##  [55] prodlim_2019.11.13          stats4_4.1.2                ##  [57] truncnorm_1.0-8             glmnet_4.1-3                ##  [59] httr_1.4.2                  gplots_3.1.1                ##  [61] RColorBrewer_1.1-3          ellipsis_0.3.2              ##  [63] NADA_1.6-1.1                pkgconfig_2.0.3             ##  [65] XML_3.99-0.9                nnet_7.3-17                 ##  [67] sass_0.4.1                  locfit_1.5-9.5              ##  [69] utf8_1.2.2                  tidyselect_1.1.2            ##  [71] rlang_1.0.2                 reshape2_1.4.4              ##  [73] AnnotationDbi_1.56.2        munsell_0.5.0               ##  [75] tools_4.1.2                 cachem_1.0.6                ##  [77] cli_3.2.0                   generics_0.1.2              ##  [79] RSQLite_2.2.12              ade4_1.7-19                 ##  [81] evaluate_0.15               biomformat_1.22.0           ##  [83] stringr_1.4.0               fastmap_1.1.0               ##  [85] yaml_2.3.5                  ragg_1.2.2                  ##  [87] ModelMetrics_1.2.2.2        bit64_4.0.5                 ##  [89] fs_1.5.2                    caTools_1.18.2              ##  [91] purrr_0.3.4                 KEGGREST_1.34.0             ##  [93] future_1.24.0               ANCOMBC_1.4.0               ##  [95] nlme_3.1-157                compiler_4.1.2              ##  [97] rstudioapi_0.13             png_0.1-7                   ##  [99] zCompositions_1.4.0-1       geneplotter_1.72.0          ## [101] bslib_0.3.1                 stringi_1.7.6               ## [103] highr_0.9                   desc_1.4.1                  ## [105] Matrix_1.4-1                nloptr_2.0.0                ## [107] vegan_2.5-7                 microbiome_1.16.0           ## [109] permute_0.9-7               multtest_2.50.0             ## [111] vctrs_0.4.0                 pillar_1.7.0                ## [113] lifecycle_1.0.1             rhdf5filters_1.6.0          ## [115] Rdpack_2.3                  jquerylib_0.1.4             ## [117] data.table_1.14.2           bitops_1.0-7                ## [119] GenomicRanges_1.46.1        R6_2.5.1                    ## [121] KernSmooth_2.23-20          parallelly_1.30.0           ## [123] IRanges_2.28.0              codetools_0.2-18            ## [125] MASS_7.3-56                 gtools_3.9.2                ## [127] assertthat_0.2.1            Wrench_1.12.0               ## [129] rhdf5_2.38.1                SummarizedExperiment_1.24.0 ## [131] DESeq2_1.34.0               rprojroot_2.0.3             ## [133] withr_2.5.0                 S4Vectors_0.32.4            ## [135] GenomeInfoDbData_1.2.7      mgcv_1.8-40                 ## [137] parallel_4.1.2              rpart_4.1.16                ## [139] timeDate_3043.102           grid_4.1.2                  ## [141] prettydoc_0.4.1             class_7.3-20                ## [143] tidyr_1.2.0                 Rfast_2.0.6                 ## [145] rmarkdown_2.13              MatrixGenerics_1.6.0        ## [147] Rtsne_0.15                  pROC_1.18.0                 ## [149] lubridate_1.8.0             ALDEx2_1.26.0               ## [151] Biobase_2.54.0"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hua Zou. Maintainer, author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zou H (2022). “MicrobiomeAnalysis: R package analysis visualization metagenomics.” R package version 1.0.2, https://github.com/HuaZou/MicrobiomeAnalysis/.","code":"@Unpublished{,   title = {{MicrobiomeAnalysis}: An R package for analysis and visualization in metagenomics},   author = {Hua Zou},   year = {2022},   note = {R package version 1.0.2},   url = {https://github.com/HuaZou/MicrobiomeAnalysis/}, }"},{"path":"/index.html","id":"microbiomeanalysis-a-comprehensive-r-package-for-managing-and-analyzing-microbiome-data","dir":"","previous_headings":"","what":"Data analysis toolkits in metagenomics","title":"Data analysis toolkits in metagenomics","text":"package many unique features:","code":""},{"path":[]},{"path":"/index.html","id":"writing_hand-authors","dir":"","previous_headings":"","what":"✍️ Authors","title":"Data analysis toolkits in metagenomics","text":"Hua Zou","code":""},{"path":[]},{"path":"/index.html","id":"installation-of-dependencies","dir":"","previous_headings":"⏬ Installation","what":"Installation of dependencies","title":"Data analysis toolkits in metagenomics","text":"Requiring R-base version 4.1.2. dependencies CRAN bioconductor, others, obtained github. version dependencies follows: dplyr (>= 1.0.8) phyloseq (>= 1.38.0) magrittr (>= 2.0.2) purrr (>= 0.3.4) MASS (>= 7.3-55) ggplot2 (>= 3.3.5) tibble (>= 3.1.6) rlang (>= 1.0.2) coin (>= 1.4-2) ggtree (>= 3.2.1) tidytree (>= 0.3.9) IRanges (>= 2.28.0) tidyr (>= 1.2.0) patchwork (>= 1.1.1) ggsignif (>= 0.6.3) metagenomeSeq (>= 1.36.0) DESeq2 (>= 1.34.0) edgeR (>= 3.36.0) vegan (>= 2.5-7) limma (>= 3.50.1) caret (>= 6.0-92) scales (>= 1.1.1) yaml (>= 2.3.5) RColorBrewer (>= 1.1-2) ALDEx2 (>= 1.26.0) ape (>= 5.6-2) ade4 (>= 1.7-18) Rtsne (>= 0.15) ANCOMBC (>= 1.4.0) coin (>= 1.4-2) glmnet (>= 4.1-3) BiocGenerics (>= 0.40.0) biomformat (>= 1.22.0) S4Vectors (>= 0.32.3) Biobase (>= 2.54.0) two methods install aforementioned packages.","code":""},{"path":"/index.html","id":"dependencies-in-cran--bioconductor","dir":"","previous_headings":"⏬ Installation > Installation of dependencies","what":"dependencies in CRAN & Bioconductor","title":"Data analysis toolkits in metagenomics","text":"","code":"install.packages(\"pacman\")  library(pacman)  pacman::p_load(phyloseq, dplyr, tibble, Biobase, ggplot2)"},{"path":"/index.html","id":"dependencies-in-github","dir":"","previous_headings":"⏬ Installation > Installation of dependencies","what":"dependencies in github","title":"Data analysis toolkits in metagenomics","text":"","code":"# Step 1: Install devtools if (!requireNamespace(c(\"remotes\", \"devtools\"), quietly=TRUE)) {   install.packages(c(\"devtools\", \"remotes\")) } library(devtools) #library(remotes)  # Step 2: install corncob package devtools::install_github(\"bryandmartin/corncob\") # remotes::install_github(\"bryandmartin/corncob\")"},{"path":"/index.html","id":"dependencies-from-website","dir":"","previous_headings":"⏬ Installation > Installation of dependencies","what":"dependencies from website","title":"Data analysis toolkits in metagenomics","text":"Manual download RAIDA_1.0.tar.gz install locally Manual download mbzinb_0.2.tar.gz install locally","code":"R CMD INSTALL RAIDA_*.tar.gz install.packages(\"RAIDA_1.0.tar.gz\", repos = NULL, type = \"source\") R CMD INSTALL mbzinb_*.tar.gz install.packages(\"mbzinb_0.2.tar.gz\", repos = NULL, type = \"source\")"},{"path":"/index.html","id":"installing-microbiomeanalysis","dir":"","previous_headings":"⏬ Installation","what":"Installing MicrobiomeAnalysis","title":"Data analysis toolkits in metagenomics","text":"Get released MicrobiomeAnalysis packages . development version github:","code":"install.packages(\"MicrobiomeAnalysis*.tar.gz\", repos = NULL, type = \"source\") remotes::install_github(\"HuaZou/MicrobiomeAnalysis\")"},{"path":"/index.html","id":"book-vignette","dir":"","previous_headings":"","what":"📖 Vignette","title":"Data analysis toolkits in metagenomics","text":"Using following command Choosing html details. tutorial Microbiota Data Analysis MicrobiomeAnalysis made bookdown.","code":"utils::browseVignettes(package=\"MicrobiomeAnalysis\")"},{"path":"/index.html","id":"sparkling_heart-contributing","dir":"","previous_headings":"","what":"💖 Contributing","title":"Data analysis toolkits in metagenomics","text":"Welcome contributions comments, can file .","code":""},{"path":"/index.html","id":"trophy-acknowledgement","dir":"","previous_headings":"","what":"🏆 Acknowledgement","title":"Data analysis toolkits in metagenomics","text":"Thanks developers methods integrated MicrobiomeAnalysis. reference package microbiomeMarker. R codes differentail analysis methods almost microbiomeMarker.","code":""},{"path":"/index.html","id":"eight_pointed_black_star-citation","dir":"","previous_headings":"","what":"✴️ Citation","title":"Data analysis toolkits in metagenomics","text":"Kindly cite using citation(\"MicrobiomeAnalysis\") think MicrobiomeAnalysis helps . Alternative way Zou H (2022). MicrobiomeAnalysis: R package analysis visualization metagenomics. R package version 1.0.1, <URL:https://github.com/HuaZou/MicrobiomeAnalysis/>.","code":""},{"path":"/reference/abundances-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract taxa abundances — abundances","title":"Extract taxa abundances — abundances","text":"Extract taxa abundances phyloseq objects.","code":""},{"path":"/reference/abundances-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract taxa abundances — abundances","text":"","code":"abundances(object, transform = c(\"identity\", \"log10\", \"log10p\"), norm = FALSE)  # S4 method for otu_table abundances(object, transform = c(\"identity\", \"log10\", \"log10p\"), norm = FALSE)  # S4 method for phyloseq abundances(object, transform = c(\"identity\", \"log10\", \"log10p\"), norm = FALSE)  # S4 method for microbiomeMarker abundances(object, transform = c(\"identity\", \"log10\", \"log10p\"))"},{"path":"/reference/abundances-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract taxa abundances — abundances","text":"object otu_table, phyloseq, microbiomeMarker. transform transformation apply, options inclulde: \"identity\", return original data without transformation. \"log10\", transformation log10(object), data contains zeros transformation log10(1 + object). \"log10p\", transformation log10(1 + object). norm logical, indicating whether return normalized taxa abundances.","code":""},{"path":"/reference/abundances-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract taxa abundances — abundances","text":"abundance matrix taxa rows samples columns.","code":""},{"path":[]},{"path":"/reference/abundances-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract taxa abundances — abundances","text":"","code":"data(caporaso) abd <- abundances(caporaso)"},{"path":"/reference/aggregate_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate Taxa — aggregate_taxa","title":"Aggregate Taxa — aggregate_taxa","text":"Summarize phyloseq data higher phylogenetic level.","code":""},{"path":"/reference/aggregate_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate Taxa — aggregate_taxa","text":"","code":"aggregate_taxa(x, level, verbose = FALSE)"},{"path":"/reference/aggregate_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate Taxa — aggregate_taxa","text":"x phyloseq-class object level Summarization level (rank_names(pseq)) verbose verbose","code":""},{"path":"/reference/aggregate_taxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate Taxa — aggregate_taxa","text":"Summarized phyloseq object","code":""},{"path":"/reference/aggregate_taxa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregate Taxa — aggregate_taxa","text":"provides convenient way aggregate phyloseq OTUs (taxa) phylogenetic tree missing. Calculates sum OTU abundances OTUs map higher-level group. Removes ambiguous levels taxonomy table. Returns phyloseq object summarized abundances.","code":""},{"path":"/reference/aggregate_taxa.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Aggregate Taxa — aggregate_taxa","text":"See citation('microbiome')","code":""},{"path":"/reference/aggregate_taxa.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Aggregate Taxa — aggregate_taxa","text":"Contact: Leo Lahti microbiome-admin@googlegroups.com","code":""},{"path":"/reference/aggregate_taxa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate Taxa — aggregate_taxa","text":"","code":"data(caporaso) caporaso_phylum <- aggregate_taxa(caporaso, \"Phylum\")"},{"path":"/reference/assign-marker_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign marker_table to object — marker_table<-","title":"Assign marker_table to object — marker_table<-","text":"function replace marker_table slot object value.","code":""},{"path":"/reference/assign-marker_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign marker_table to object — marker_table<-","text":"","code":"marker_table(object) <- value"},{"path":"/reference/assign-marker_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign marker_table to object — marker_table<-","text":"object microbiomeMarker object modify. value new value replace marker_table slot object. Either marker_table-class, data.frame can coerced marker_table-class.","code":""},{"path":"/reference/assign-marker_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign marker_table to object — marker_table<-","text":"microbiomeMarker object.","code":""},{"path":"/reference/assign-marker_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign marker_table to object — marker_table<-","text":"","code":"data(enterotypes_arumugam) mm <- run_limma_voom(     enterotypes_arumugam,     \"Enterotype\",     contrast = c(\"Enterotype 3\", \"Enterotype 2\"),     pvalue_cutoff = 0.1,     p_adjust = \"fdr\" ) mm_marker <- marker_table(mm) mm_marker #>                                   feature enrich_group  ef_logFC       pvalue #> marker1    p__Bacteroidetes|g__Prevotella Enterotype.2  5.821020 3.082538e-11 #> marker2 p__Verrucomicrobia|g__Akkermansia Enterotype.3 -8.620727 3.304924e-05 #> marker3                p__Verrucomicrobia Enterotype.3 -8.266833 6.741864e-05 #>                 padj #> marker1 7.521392e-09 #> marker2 4.032007e-03 #> marker3 5.483383e-03 marker_table(mm) <- mm_marker[1:2, ] marker_table(mm) #>                                   feature enrich_group  ef_logFC       pvalue #> marker1    p__Bacteroidetes|g__Prevotella Enterotype.2  5.821020 3.082538e-11 #> marker2 p__Verrucomicrobia|g__Akkermansia Enterotype.3 -8.620727 3.304924e-05 #>                 padj #> marker1 7.521392e-09 #> marker2 4.032007e-03"},{"path":"/reference/assign-otu_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign a new OTU table — assign-otu_table","title":"Assign a new OTU table — assign-otu_table","text":"Assign new OTU table microbiomeMarker object","code":""},{"path":"/reference/assign-otu_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign a new OTU table — assign-otu_table","text":"","code":"# S4 method for microbiomeMarker,otu_table otu_table(x) <- value  # S4 method for microbiomeMarker,phyloseq otu_table(x) <- value  # S4 method for microbiomeMarker,microbiomeMarker otu_table(x) <- value"},{"path":"/reference/assign-otu_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign a new OTU table — assign-otu_table","text":"x microbiomeMarker value otu_table, phyloseq, microbiomeMarker","code":""},{"path":"/reference/assign-otu_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign a new OTU table — assign-otu_table","text":"microbiomeMarker object.","code":""},{"path":"/reference/check_sample_names.html","id":null,"dir":"Reference","previous_headings":"","what":"check whether samples' names start with numeric and then paste ","title":"check whether samples' names start with numeric and then paste ","text":"check whether samples' names start numeric paste \"S_\"","code":""},{"path":"/reference/check_sample_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check whether samples' names start with numeric and then paste ","text":"","code":"check_sample_names(object)"},{"path":"/reference/check_sample_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check whether samples' names start with numeric and then paste ","text":"object (Optional). phyloseq::phyloseq Biobase::ExpressionSet phyloseq::otu_table phyloseq::otu_table matrix/metadata.","code":""},{"path":"/reference/confounder.html","id":null,"dir":"Reference","previous_headings":"","what":"Confounder analysis — confounder","title":"Confounder analysis — confounder","text":"Confounding variables may mask actual differential features. function utilizes constrained correspondence analysis (CCA) measure confounding factors.","code":""},{"path":"/reference/confounder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confounder analysis — confounder","text":"","code":"confounder(   ps,   target_var,   norm = \"none\",   confounders = NULL,   permutations = 999,   ... )"},{"path":"/reference/confounder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confounder analysis — confounder","text":"ps phyloseq::phyloseq object. target_var character, variable interest norm norm methods used normalize microbial abundance data. See normalize() details. confounders confounding variables measured, NULL, variables meta data analyzed. permutations number permutations, see vegan::anova.cca(). ... extra arguments passed vegan::anova.cca().","code":""},{"path":"/reference/confounder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confounder analysis — confounder","text":"data.frame contains three variables: confounder, pseudo-F p value.","code":""},{"path":"/reference/confounder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confounder analysis — confounder","text":"","code":"data(caporaso) confounder(caporaso, \"SampleType\", confounders = \"ReportedAntibioticUsage\") #>                confounder pseudo_F pvalue #> 1 ReportedAntibioticUsage 1.193135  0.229"},{"path":"/reference/data-caporaso.html","id":null,"dir":"Reference","previous_headings":"","what":"16S rRNA data from ","title":"16S rRNA data from ","text":"16S read counts phylogenetic tree file 34 Illumina samples derived Moving Pictures Human Microbiome (Caporaso et al.) Group label: gut, left palm, right palm, tongue - indicating different sampled body sites.","code":""},{"path":"/reference/data-caporaso.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"16S rRNA data from ","text":"phyloseq::phyloseq object","code":""},{"path":"/reference/data-caporaso.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"16S rRNA data from ","text":"Data downloaded https://www.microbiomeanalyst.ca","code":""},{"path":"/reference/data-caporaso.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"16S rRNA data from ","text":"Caporaso, et al. Moving pictures human microbiome. Genome Biol 12, R50 (2011). https://doi.org/10.1186/gb-2011-12-5-r50","code":""},{"path":"/reference/data-caporaso.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"16S rRNA data from ","text":"Yang Cao","code":""},{"path":"/reference/data-cid_ying.html","id":null,"dir":"Reference","previous_headings":"","what":"16S rRNA data of 94 patients from CID 2012 — data-cid_ying","title":"16S rRNA data of 94 patients from CID 2012 — data-cid_ying","text":"Data cohort 94 Bone Marrow Transplant patients previously published CID","code":""},{"path":"/reference/data-cid_ying.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"16S rRNA data of 94 patients from CID 2012 — data-cid_ying","text":"phyloseq::phyloseq object","code":""},{"path":"/reference/data-cid_ying.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"16S rRNA data of 94 patients from CID 2012 — data-cid_ying","text":"https://github.com/ying14/yingtools2/tree/master/data","code":""},{"path":"/reference/data-cid_ying.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"16S rRNA data of 94 patients from CID 2012 — data-cid_ying","text":"Ying, et al. Intestinal Domination Risk Bacteremia Patients Undergoing Allogeneic Hematopoietic Stem Cell Transplantation, Clinical Infectious Diseases, Volume 55, Issue 7, 1 October 2012, Pages 905–914, https://academic.oup.com/cid/article/55/7/905/428203","code":""},{"path":"/reference/data-cid_ying.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"16S rRNA data of 94 patients from CID 2012 — data-cid_ying","text":"Yang Cao","code":""},{"path":"/reference/data-ecam.html","id":null,"dir":"Reference","previous_headings":"","what":"Data from Early Childhood Antibiotics and the Microbiome (ECAM) study — data-ecam","title":"Data from Early Childhood Antibiotics and the Microbiome (ECAM) study — data-ecam","text":"data subset Early Childhood Antibiotics Microbiome (ECAM) study, tracked microbiome composition development 43 infants United States birth 2 years age, identifying microbiome associations antibiotic exposure, delivery mode, diet.","code":""},{"path":"/reference/data-ecam.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data from Early Childhood Antibiotics and the Microbiome (ECAM) study — data-ecam","text":"phyloseq::phyloseq object","code":""},{"path":"/reference/data-ecam.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data from Early Childhood Antibiotics and the Microbiome (ECAM) study — data-ecam","text":"Bokulich, Nicholas ., et al. \"Antibiotics, birth mode, diet shape microbiome maturation early life.\" Science translational medicine 8.343 (2016): 343ra82-343ra82. https://github.com/FrederickHuangLin/ANCOM/tree/master/data","code":""},{"path":"/reference/data-enterotypes_arumugam.html","id":null,"dir":"Reference","previous_headings":"","what":"Enterotypes data of 39 samples — data-enterotypes_arumugam","title":"Enterotypes data of 39 samples — data-enterotypes_arumugam","text":"data contains 22 European metagenomes Danish, French, Italian, Spanish individuals, 13 Japanese 4 American.","code":""},{"path":"/reference/data-enterotypes_arumugam.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Enterotypes data of 39 samples — data-enterotypes_arumugam","text":"phyloseq::phyloseq object","code":""},{"path":"/reference/data-enterotypes_arumugam.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Enterotypes data of 39 samples — data-enterotypes_arumugam","text":"Arumugam, Manimozhiyan, et al. Enterotypes human gut microbiome. nature 473.7346 (2011): 174-180.","code":""},{"path":"/reference/data-enterotypes_arumugam.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Enterotypes data of 39 samples — data-enterotypes_arumugam","text":"Yang Cao","code":""},{"path":"/reference/data-kostic_crc.html","id":null,"dir":"Reference","previous_headings":"","what":"Data from a study on colorectal cancer (kostic 2012) — data-kostic_crc","title":"Data from a study on colorectal cancer (kostic 2012) — data-kostic_crc","text":"data study colorectal cancer. Samples DIAGNOSIS attribute assigned less 500 reads (counts) removed, 191 samples remains (91 healthy 86 Tumors).","code":""},{"path":"/reference/data-kostic_crc.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data from a study on colorectal cancer (kostic 2012) — data-kostic_crc","text":"phyloseq::phyloseq object","code":""},{"path":"/reference/data-kostic_crc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Data from a study on colorectal cancer (kostic 2012) — data-kostic_crc","text":"Kostic et al. Genomic analysis identifies association Fusobacterium colorectal carcinoma. Genome research, 2012, 22(2), 292-298.","code":""},{"path":"/reference/data-kostic_crc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Data from a study on colorectal cancer (kostic 2012) — data-kostic_crc","text":"Yang Cao","code":""},{"path":"/reference/default_color.html","id":null,"dir":"Reference","previous_headings":"","what":"generate multiple colors for visualization — default_color","title":"generate multiple colors for visualization — default_color","text":"funciton generate multiple colors visualization","code":""},{"path":"/reference/default_color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate multiple colors for visualization — default_color","text":"","code":"default_color(number = 74)"},{"path":"/reference/default_color.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate multiple colors for visualization — default_color","text":"number (Required). integer. number colors (default: 74).","code":""},{"path":"/reference/dot-get_GUniFrac.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized UniFrac distances for comparing microbial communities — .get_GUniFrac","title":"Generalized UniFrac distances for comparing microbial communities — .get_GUniFrac","text":"generalized version commonly used UniFrac distances. unweighted weighted UniFrac, variance-adjusted weighted UniFrac distances also implemented.","code":""},{"path":"/reference/dot-get_GUniFrac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized UniFrac distances for comparing microbial communities — .get_GUniFrac","text":"","code":".get_GUniFrac(otu.tab,                  tree,                  alpha)"},{"path":"/reference/dot-get_GUniFrac.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized UniFrac distances for comparing microbial communities — .get_GUniFrac","text":"otu.tab (Required). matrix, OTU count table, row - n sample, column - q OTU. tree (Required). tree. rooted phylogenetic tree R class “phylo”. alpha (optional). numeric. parameter controlling weight abundant lineages.","code":""},{"path":"/reference/dot-get_GUniFrac.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalized UniFrac distances for comparing microbial communities — .get_GUniFrac","text":"three dimensional array containing UniFrac distance matrices. unifracs: three dimensional array containing generalized UniFrac distances, unweighted UniFrac distance variance adjusted UniFrac distances.","code":""},{"path":"/reference/dot-get_GUniFrac.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generalized UniFrac distances for comparing microbial communities — .get_GUniFrac","text":"https://github.com/cran/GUniFrac/blob/master/R/GUniFrac.R","code":""},{"path":"/reference/dot-get_GUniFrac.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generalized UniFrac distances for comparing microbial communities — .get_GUniFrac","text":"Created Jun Chen; modified Hua Zou (5/14/2022 Shenzhen China)","code":""},{"path":"/reference/dot-get_GUniFrac.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalized UniFrac distances for comparing microbial communities — .get_GUniFrac","text":"","code":"if (FALSE) { data(\"cid_ying\") otu.tab <- phyloseq::otu_table(cid_ying) tree <- phyloseq::phy_tree(cid_ying)  unifracs <- .get_GUniFrac(otu.tab, tree, alpha=c(0, 0.5, 1))$unifracs  dw <- unifracs[, , \"d_1\"]    # Weighted UniFrac du <- unifracs[, , \"d_UW\"]   # Unweighted UniFrac dv <- unifracs[, , \"d_VAW\"]  # Variance adjusted weighted UniFrac d0 <- unifracs[, , \"d_0\"]    # GUniFrac with alpha 0 d5 <- unifracs[, , \"d_0.5\"]  # GUniFrac with alpha 0.5  }"},{"path":"/reference/extract-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract marker_table object — [","title":"Extract marker_table object — [","text":"Operators acting marker_table extract parts.","code":""},{"path":"/reference/extract-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract marker_table object — [","text":"","code":"# S4 method for marker_table,ANY,ANY,ANY [(x, i, j, ..., drop = TRUE)"},{"path":"/reference/extract-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract marker_table object — [","text":"x object extract element(s) replace element(s). indices specifying elements extract replace.  Indices     numeric character vectors empty (missing)     NULL.  Numeric values coerced integer     .integer (hence truncated towards zero).     Character vectors matched names     object (matrices/arrays, dimnames):     see ‘Character indices’ details. [-indexing : , j, ... can     logical vectors, indicating elements/slices select.  vectors     recycled necessary match corresponding extent.     , j, ... can also negative integers,     indicating elements/slices leave selection. indexing arrays [ single argument can     matrix many columns dimensions x;     result vector elements corresponding sets     indices row . index value NULL treated integer(0). j indices specifying elements extract replace.  Indices     numeric character vectors empty (missing)     NULL.  Numeric values coerced integer     .integer (hence truncated towards zero).     Character vectors matched names     object (matrices/arrays, dimnames):     see ‘Character indices’ details. [-indexing : , j, ... can     logical vectors, indicating elements/slices select.  vectors     recycled necessary match corresponding extent.     , j, ... can also negative integers,     indicating elements/slices leave selection. indexing arrays [ single argument can     matrix many columns dimensions x;     result vector elements corresponding sets     indices row . index value NULL treated integer(0). ... see base::Extract(). drop ignored now.","code":""},{"path":"/reference/extract-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract marker_table object — [","text":"marker_table object.","code":""},{"path":[]},{"path":"/reference/get_eigValue.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract and visualize the eigenvalues/variances of dimensions — get_eigValue","title":"Extract and visualize the eigenvalues/variances of dimensions — get_eigValue","text":"funciton obtain eigenvalues/variances dimensions","code":""},{"path":"/reference/get_eigValue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract and visualize the eigenvalues/variances of dimensions — get_eigValue","text":"","code":"get_eigValue(X)"},{"path":"/reference/get_eigValue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract and visualize the eigenvalues/variances of dimensions — get_eigValue","text":"X (Required). Ordination result.","code":""},{"path":"/reference/import_dada2.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the output of dada2 into phyloseq object — import_dada2","title":"Convert the output of dada2 into phyloseq object — import_dada2","text":"Convert output dada2 phyloseq object.","code":""},{"path":"/reference/import_dada2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the output of dada2 into phyloseq object — import_dada2","text":"","code":"import_dada2(     seq_tab,     tax_tab = NULL,     sam_tab = NULL,     phy_tree = NULL,     keep_taxa_rows = TRUE)"},{"path":"/reference/import_dada2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the output of dada2 into phyloseq object — import_dada2","text":"seq_tab (Required). matrix-like, ASV table, output dada2::removeBimeraDenovo. tax_tab (Optional). matrix, taxonomy table, output dada2::assignTaxonomy dada2::addSpecies. sam_tab (Optional). data.frame phyloseq::sample_data, sample data. phy_tree (Optional). ape::phylo class character represents path tree file. keep_taxa_rows (Optional). logical. whether keep taxa rows otu_table returned phyloseq object, default TRUE.","code":""},{"path":"/reference/import_dada2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the output of dada2 into phyloseq object — import_dada2","text":"phyloseq::phyloseq object hold taxonomy info, sample metadata, number reads per ASV.","code":""},{"path":"/reference/import_dada2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert the output of dada2 into phyloseq object — import_dada2","text":"output dada2 pipeline feature table amplicon sequence variants (ASV table): matrix rows corresponding samples columns ASVs, value entry number times ASV observed sample. table analogous traditional OTU table. Conveniently, taxa names saved ASV1, ASV2, ..., returned phyloseq object.","code":""},{"path":"/reference/import_dada2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert the output of dada2 into phyloseq object — import_dada2","text":"Created Yang Cao; modified Hua Zou (5/14/2022 Shenzhen China)","code":""},{"path":"/reference/import_dada2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the output of dada2 into phyloseq object — import_dada2","text":"","code":"if (FALSE) { seq_tab <- readRDS(   system.file(\"extdata\", \"dada2_seqtab.rds\",               package = \"MicrobiomeAnalysis\")) tax_tab <- readRDS(   system.file(\"extdata\", \"dada2_taxtab.rds\",               package = \"MicrobiomeAnalysis\")) sam_tab <- read.table(   system.file(\"extdata\", \"dada2_samdata.txt\",               package = \"MicrobiomeAnalysis\"),   sep = \"\\t\", header = TRUE, row.names = 1) ps <- import_dada2(seq_tab = seq_tab, tax_tab = tax_tab, sam_tab = sam_tab) ps }"},{"path":"/reference/import_qiime2.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the qiime2 output of dada2 into phyloseq object — import_qiime2","title":"Convert the qiime2 output of dada2 into phyloseq object — import_qiime2","text":"Import qiime2 artifacts, including feature table, taxonomic table, phylogenetic tree, representative sequence sample metadata phyloseq object.","code":""},{"path":"/reference/import_qiime2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the qiime2 output of dada2 into phyloseq object — import_qiime2","text":"","code":"import_qiime2(         otu_qza,         taxa_qza,         sam_tab,         refseq_qza,         tree_qza)"},{"path":"/reference/import_qiime2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the qiime2 output of dada2 into phyloseq object — import_qiime2","text":"otu_qza (Required). character, file path feature table qiime2. taxa_qza (Optional). character, file path taxonomic table qiime2, default NULL. sam_tab (Optional). character, file path sample metadata tsv format, default NULL. refseq_qza (Optional). character, file path representative sequences qiime2, default NULL. tree_qza (Optional). character, file path phylogenetic tree qiime2, default NULL.","code":""},{"path":"/reference/import_qiime2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the qiime2 output of dada2 into phyloseq object — import_qiime2","text":"phyloseq::phyloseq object.","code":""},{"path":"/reference/import_qiime2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert the qiime2 output of dada2 into phyloseq object — import_qiime2","text":"Created Yang Cao; modified Hua Zou (5/14/2022 Shenzhen China)","code":""},{"path":"/reference/import_qiime2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the qiime2 output of dada2 into phyloseq object — import_qiime2","text":"","code":"if (FALSE) { otuqza_file <- system.file(     \"extdata\", \"table.qza\",     package = \"MicrobiomeAnalysis\" ) taxaqza_file <- system.file(     \"extdata\", \"taxonomy.qza\",     package = \"MicrobiomeAnalysis\" ) sample_file <- system.file(     \"extdata\", \"sample-metadata.tsv\",     package = \"MicrobiomeAnalysis\" ) treeqza_file <- system.file(     \"extdata\", \"tree.qza\",     package = \"MicrobiomeAnalysis\" ) ps <- import_qiime2(     otu_qza = otuqza_file, taxa_qza = taxaqza_file,     sam_tab = sample_file, tree_qza = treeqza_file ) ps }"},{"path":"/reference/insertCol.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert Row into a Matrix — insertCol","title":"Insert Row into a Matrix — insertCol","text":"Insert Row Matrix","code":""},{"path":"/reference/insertCol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert Row into a Matrix — insertCol","text":"","code":"insertCol(m, c, v = NA, cName = \"\")"},{"path":"/reference/insertCol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert Row into a Matrix — insertCol","text":"m (Required). matrix. c (Required). numeric. column number new column inserted. v (optional). numeric. values new column. cName (optional). character. name new column.","code":""},{"path":"/reference/insertCol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert Row into a Matrix — insertCol","text":"matrix one column provided matrix m.","code":""},{"path":"/reference/insertCol.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Insert Row into a Matrix — insertCol","text":"https://github.com/cran/miscTools/","code":""},{"path":"/reference/insertCol.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Insert Row into a Matrix — insertCol","text":"Created Hua Zou (5/19/2022 Shenzhen China)","code":""},{"path":"/reference/insertCol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert Row into a Matrix — insertCol","text":"","code":"if (FALSE) { m <- matrix(1:4, 2) insertCol(m, 2, 5:6) }"},{"path":"/reference/insertRow.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert Row into a Matrix — insertRow","title":"Insert Row into a Matrix — insertRow","text":"Insert Row Matrix","code":""},{"path":"/reference/insertRow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert Row into a Matrix — insertRow","text":"","code":"insertRow(m, r, v = NA, rName = \"\")"},{"path":"/reference/insertRow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert Row into a Matrix — insertRow","text":"m (Required). matrix. r (Required). numeric. row number new row inserted. v (optional). numeric. values new row. rName (optional). character. name new row.","code":""},{"path":"/reference/insertRow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert Row into a Matrix — insertRow","text":"matrix one row provided matrix m.","code":""},{"path":"/reference/insertRow.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Insert Row into a Matrix — insertRow","text":"https://github.com/cran/miscTools/","code":""},{"path":"/reference/insertRow.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Insert Row into a Matrix — insertRow","text":"Created Hua Zou (5/19/2022 Shenzhen China)","code":""},{"path":"/reference/insertRow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert Row into a Matrix — insertRow","text":"","code":"if (FALSE) { m <- matrix(1:4, 2) insertRow(m, 2, 5:6) }"},{"path":"/reference/marker_table-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The S4 class for storing microbiome marker information — marker_table-class","title":"The S4 class for storing microbiome marker information — marker_table-class","text":"Class inherit data.frame. Rows represent microbiome markers variables represents feature marker.","code":""},{"path":"/reference/marker_table-class.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"The S4 class for storing microbiome marker information — marker_table-class","text":"names,row.names character vector, inherited input data.frame .data list, element corresponding column input data.frame .S3Class character, S3 class marker_table inherited : \"data.frame\"","code":""},{"path":"/reference/marker_table-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The S4 class for storing microbiome marker information — marker_table-class","text":"Yang Cao","code":""},{"path":"/reference/marker_table-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Build or access the marker_table — marker_table","title":"Build or access the marker_table — marker_table","text":"recommended function building accessing microbiome marker table (marker_table).","code":""},{"path":"/reference/marker_table-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build or access the marker_table — marker_table","text":"","code":"marker_table(object)  # S4 method for data.frame marker_table(object)  # S4 method for microbiomeMarker marker_table(object)"},{"path":"/reference/marker_table-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build or access the marker_table — marker_table","text":"object object among set classes defined microbiomeMarker package contain marker_table","code":""},{"path":"/reference/marker_table-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build or access the marker_table — marker_table","text":"marker_table object.","code":""},{"path":"/reference/marker_table-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build or access the marker_table — marker_table","text":"","code":"data(enterotypes_arumugam) mm <- run_limma_voom(     enterotypes_arumugam,     \"Enterotype\",     contrast = c(\"Enterotype 3\", \"Enterotype 2\"),     pvalue_cutoff = 0.05,     p_adjust = \"fdr\" ) marker_table(mm) #>                                   feature enrich_group  ef_logFC       pvalue #> marker1    p__Bacteroidetes|g__Prevotella Enterotype.2  5.821020 3.082538e-11 #> marker2 p__Verrucomicrobia|g__Akkermansia Enterotype.3 -8.620727 3.304924e-05 #> marker3                p__Verrucomicrobia Enterotype.3 -8.266833 6.741864e-05 #>                 padj #> marker1 7.521392e-09 #> marker2 4.032007e-03 #> marker3 5.483383e-03"},{"path":"/reference/microbiomeMarker-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The main class for microbiomeMarker data — microbiomeMarker-class","title":"The main class for microbiomeMarker data — microbiomeMarker-class","text":"microbiomeMarker-class inherited phyloseq::phyloseq adding custom slot microbiome_marker save differential analysis results. provides seamless interface phyloseq, makes microbiomeMarker simple easy use. details see document phyloseq::phyloseq.","code":""},{"path":"/reference/microbiomeMarker-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The main class for microbiomeMarker data — microbiomeMarker-class","text":"","code":"# S4 method for microbiomeMarker show(object)"},{"path":"/reference/microbiomeMarker-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The main class for microbiomeMarker data — microbiomeMarker-class","text":"object microbiomeMarker-class object","code":""},{"path":"/reference/microbiomeMarker-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The main class for microbiomeMarker data — microbiomeMarker-class","text":"microbiomeMarker object.","code":""},{"path":"/reference/microbiomeMarker-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The main class for microbiomeMarker data — microbiomeMarker-class","text":"marker_table data.frame, marker_table object. norm_method character, method used normalize input phyloseq object. diff_method character, method used marker identification.","code":""},{"path":[]},{"path":"/reference/microbiomeMarker-package.html","id":null,"dir":"Reference","previous_headings":"","what":"microbiomeMarker: A package for microbiome biomarker discovery — microbiomeMarker-package","title":"microbiomeMarker: A package for microbiome biomarker discovery — microbiomeMarker-package","text":"microboimeMarker package provides several methods identify micribome biomarker, lefse, deseq2.","code":""},{"path":"/reference/microbiomeMarker.html","id":null,"dir":"Reference","previous_headings":"","what":"Build microbiomeMarker-class objects — microbiomeMarker","title":"Build microbiomeMarker-class objects — microbiomeMarker","text":"constructor build microbiomeMarker object, use new() constructor.","code":""},{"path":"/reference/microbiomeMarker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build microbiomeMarker-class objects — microbiomeMarker","text":"","code":"microbiomeMarker(   marker_table = NULL,   norm_method = NULL,   diff_method = NULL,   ... )"},{"path":"/reference/microbiomeMarker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build microbiomeMarker-class objects — microbiomeMarker","text":"marker_table marker_table object differtial analysis. norm_method character, method used normalize input phyloseq object. diff_method character, method used microbiome marker identification. ... arguments passed phyloseq::phyloseq()","code":""},{"path":"/reference/microbiomeMarker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build microbiomeMarker-class objects — microbiomeMarker","text":"microbiomeMarker object.","code":""},{"path":[]},{"path":"/reference/microbiomeMarker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build microbiomeMarker-class objects — microbiomeMarker","text":"","code":"microbiomeMarker(     marker_table = marker_table(data.frame(         feature = c(\"speciesA\", \"speciesB\"),         enrich_group = c(\"groupA\", \"groupB\"),         ef_logFC = c(-2, 2),         pvalue = c(0.01, 0.01),         padj = c(0.01, 0.01),         row.names = c(\"marker1\", \"marker2\")     )),     norm_method = \"TSS\",     diff_method = \"DESeq2\",     otu_table = otu_table(matrix(         c(4, 1, 1, 4),         nrow = 2, byrow = TRUE,         dimnames = list(c(\"speciesA\", \"speciesB\"), c(\"sample1\", \"sample2\"))     ),     taxa_are_rows = TRUE     ),     tax_table = tax_table(matrix(         c(\"speciesA\", \"speciesB\"),         nrow = 2,         dimnames = list(c(\"speciesA\", \"speciesB\"), \"Species\")     )),     sam_data = sample_data(data.frame(         group = c(\"groupA\", \"groupB\"),         row.names = c(\"sample1\", \"sample2\")     )) ) #> microbiomeMarker-class inherited from phyloseq-class #> normalization method:              [ TSS ] #> microbiome marker identity method: [ DESeq2 ] #> marker_table() Marker Table:       [ 2 microbiome markers with 5 variables ] #> otu_table()    OTU Table:          [ 2 taxa and  2 samples ] #> sample_data()  Sample Data:        [ 2 samples by  1 sample variables ] #> tax_table()    Taxonomy Table:     [ 2 taxa by 1 taxonomic ranks ]"},{"path":"/reference/nmarker-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the number of microbiome markers — nmarker","title":"Get the number of microbiome markers — nmarker","text":"Get number microbiome markers","code":""},{"path":"/reference/nmarker-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the number of microbiome markers — nmarker","text":"","code":"nmarker(object)  # S4 method for microbiomeMarker nmarker(object)  # S4 method for marker_table nmarker(object)"},{"path":"/reference/nmarker-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the number of microbiome markers — nmarker","text":"object microbiomeMarker marker_table object","code":""},{"path":"/reference/nmarker-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the number of microbiome markers — nmarker","text":"integer, number microbiome markers","code":""},{"path":"/reference/nmarker-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the number of microbiome markers — nmarker","text":"","code":"mt <- marker_table(data.frame(     feature = c(\"speciesA\", \"speciesB\"),     enrich_group = c(\"groupA\", \"groupB\"),     ef_logFC = c(-2, 2),     pvalue = c(0.01, 0.01),     padj = c(0.01, 0.01),     row.names = c(\"marker1\", \"marker2\") )) nmarker(mt) #> [1] 2"},{"path":"/reference/normalize-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize the microbial abundance data — normalize,phyloseq-method","title":"Normalize the microbial abundance data — normalize,phyloseq-method","text":"critical normalize feature table eliminate bias due differences sampling sequencing depth.function implements six widely-used normalization methods microbial compositional data. rarefying, reads different samples randomly removed predefined number reached, assure samples library size. Rarefying normalization method standard microbial ecology. Please note authors phyloseq advocate using rarefying normalization procedure, despite recent popularity TSS simply transforms feature table relative abundance dividing number total reads sample. CSS based assumption count distributions sample equivalent low abundant genes certain threshold.  segment sample’s count distribution relatively invariant across samples scaled CSS RLE assumes features differential uses relative abundances calculate normalization factor. TMM calculates normalization factor using robust statistics based assumption features differential , average, equal samples. TMM scaling factor  calculated weighted mean log-ratios pair samples, excluding highest count OTUs OTUs largest log-fold change. CLR, log-ratios computed relative geometric mean features. norm_cpm: normalization method original LEfSe algorithm, recommended low values present (shown LEfSe galaxy).","code":""},{"path":"/reference/normalize-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize the microbial abundance data — normalize,phyloseq-method","text":"","code":"# S4 method for phyloseq normalize(object, method = \"TSS\", ...)  # S4 method for otu_table normalize(object, method = \"TSS\", ...)  # S4 method for data.frame normalize(object, method = \"TSS\", ...)  # S4 method for matrix normalize(object, method = \"TSS\", ...)  norm_rarefy(   object,   size = min(sample_sums(object)),   rng_seed = FALSE,   replace = TRUE,   trim_otus = TRUE,   verbose = TRUE )  norm_tss(object)  norm_css(object, sl = 1000)  norm_rle(   object,   locfunc = stats::median,   type = c(\"poscounts\", \"ratio\"),   geo_means = NULL,   control_genes = NULL )  norm_tmm(   object,   ref_column = NULL,   logratio_trim = 0.3,   sum_trim = 0.05,   do_weighting = TRUE,   Acutoff = -1e+10 )  norm_clr(object)  norm_cpm(object)"},{"path":"/reference/normalize-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize the microbial abundance data — normalize,phyloseq-method","text":"object phyloseq::phyloseq phyloseq::otu_table method methods used normalize microbial abundance data. Options includes: \"none\": normalize. \"rarefy\": random subsampling counts smallest library size data set. \"TSS\": total sum scaling, also referred \"relative abundance\", abundances normalized dividing corresponding sample library size. \"TMM\": trimmed mean m-values. First, sample chosen reference. scaling factor derived using weighted trimmed mean differences log-transformed gene-count fold-change sample reference. \"RLE\", relative log expression, RLE uses pseudo-reference calculated using geometric mean gene-specific abundances samples. scaling factors calculated median gene counts ratios samples reference. \"CSS\": cumulative sum scaling, calculates scaling factors cumulative sum gene abundances data-derived threshold. \"CLR\": centered log-ratio normalization. \"CPM\": pre-sample normalization sum values 1e+06. ... arguments passed corresponding normalization methods. size, rng_seed, replace, trim_otus, verbose extra arguments passed phyloseq::rarefy_even_depth(). sl value scale. locfunc function compute location sample. default, median used. type method estimation: either \"ratio\"\"poscounts\" (recommend). geo_means default NULL, means geometric means counts used. vector geometric means another count matrix can provided \"frozen\" size factor calculation. control_genes default NULL, means taxa used size factor estimation, numeric logical index vector specifying taxa used size factor estimation (e.g. core taxa). ref_column column use reference logratio_trim amount trim use log-ratios sum_trim amount trim use combined absolute levels (\"\" values) do_weighting whether compute weights Acutoff cutoff \"\" values use trimming","code":""},{"path":"/reference/normalize-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize the microbial abundance data — normalize,phyloseq-method","text":"class object.","code":""},{"path":[]},{"path":"/reference/normalize-methods.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Normalize the microbial abundance data — normalize,phyloseq-method","text":"Created Yang Cao","code":""},{"path":"/reference/normalize-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize the microbial abundance data — normalize,phyloseq-method","text":"","code":"data(caporaso) normalize(caporaso, \"TSS\") #> phyloseq-class experiment-level object #> otu_table()   OTU Table:         [ 3426 taxa and 34 samples ] #> sample_data() Sample Data:       [ 34 samples by 8 sample variables ] #> tax_table()   Taxonomy Table:    [ 3426 taxa by 7 taxonomic ranks ] #> phy_tree()    Phylogenetic Tree: [ 3426 tips and 3424 internal nodes ]"},{"path":"/reference/phyloseq2DESeq2.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert phyloseq-class object to DESeqDataSet-class object — phyloseq2DESeq2","title":"Convert phyloseq-class object to DESeqDataSet-class object — phyloseq2DESeq2","text":"function convert [phyloseq::phyloseq-class] [DESeq2::DESeqDataSet-class], can tested using [DESeq2::DESeq()`].","code":""},{"path":"/reference/phyloseq2DESeq2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert phyloseq-class object to DESeqDataSet-class object — phyloseq2DESeq2","text":"","code":"phyloseq2DESeq2(ps, design, ...)"},{"path":"/reference/phyloseq2DESeq2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert phyloseq-class object to DESeqDataSet-class object — phyloseq2DESeq2","text":"ps [phyloseq::phyloseq-class] object convert, must [phyloseq::sample_data()`] component. design formula matrix, formula expresses counts gene depend variables colData. Many R formula valid, including designs multiple variables, e.g., ~ group + condition. argument passed DESeq2::DESeqDataSetFromMatrix(). ... additional arguments passed DESeq2::DESeqDataSetFromMatrix(), users need pass additional arguments .","code":""},{"path":"/reference/phyloseq2DESeq2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert phyloseq-class object to DESeqDataSet-class object — phyloseq2DESeq2","text":"DESeq2::DESeqDataSet object.","code":""},{"path":[]},{"path":"/reference/phyloseq2DESeq2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert phyloseq-class object to DESeqDataSet-class object — phyloseq2DESeq2","text":"","code":"data(caporaso) phyloseq2DESeq2(caporaso, ~SampleType) #> converting counts to integer mode #> Warning: some variables in design formula are characters, converting to factors #>   Note: levels of factors in the design contain characters other than #>   letters, numbers, '_' and '.'. It is recommended (but not required) to use #>   only letters, numbers, and delimiters '_' or '.', as these are safe characters #>   for column names in R. [This is a message, not a warning or an error] #> class: DESeqDataSet  #> dim: 3426 34  #> metadata(1): version #> assays(1): counts #> rownames(3426): New.CleanUp.ReferenceOTU647 14030 ... 189548 3769033 #> rowData names(0): #> colnames(34): L1S140 L1S208 ... L3S313 L2S240 #> colData names(8): SampleType Year ... DaysSinceExperimentStart #>   Description"},{"path":"/reference/phyloseq2edgeR.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert phyloseq data to edgeR DGEList object — phyloseq2edgeR","title":"Convert phyloseq data to edgeR DGEList object — phyloseq2edgeR","text":"function convert phyloseq::phyloseq object edgeR::DGEList object, can can used perform differential analysis using methods edgeR.","code":""},{"path":"/reference/phyloseq2edgeR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert phyloseq data to edgeR DGEList object — phyloseq2edgeR","text":"","code":"phyloseq2edgeR(ps, ...)"},{"path":"/reference/phyloseq2edgeR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert phyloseq data to edgeR DGEList object — phyloseq2edgeR","text":"ps phyloseq::phyloseq object. ... optional, additional named arguments passed  edgeR::DGEList(). users need pass additional arguments .","code":""},{"path":"/reference/phyloseq2edgeR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert phyloseq data to edgeR DGEList object — phyloseq2edgeR","text":"edgeR::DGEList object.","code":""},{"path":"/reference/phyloseq2edgeR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert phyloseq data to edgeR DGEList object — phyloseq2edgeR","text":"","code":"data(caporaso) dge <- phyloseq2edgeR(caporaso)"},{"path":"/reference/phyloseq2metagenomeSeq.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert phyloseq data to MetagenomeSeq MRexperiment object — phyloseq2metagenomeSeq","title":"Convert phyloseq data to MetagenomeSeq MRexperiment object — phyloseq2metagenomeSeq","text":"phyloseq data converted relevant metagenomeSeq::MRexperiment object, can tested zero-inflated mixture model framework metagenomeSeq package.","code":""},{"path":"/reference/phyloseq2metagenomeSeq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert phyloseq data to MetagenomeSeq MRexperiment object — phyloseq2metagenomeSeq","text":"","code":"phyloseq2metagenomeSeq(ps, ...)  otu_table2metagenomeSeq(ps, ...)"},{"path":"/reference/phyloseq2metagenomeSeq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert phyloseq data to MetagenomeSeq MRexperiment object — phyloseq2metagenomeSeq","text":"ps phyloseq::phyloseq object phyloseq2metagenomeSeq(), phyloseq::otu_table object otu_table2metagenomeseq(). ... optional, additional named arguments passed  metagenomeSeq::newMRexperiment(). users need pass additional arguments .","code":""},{"path":"/reference/phyloseq2metagenomeSeq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert phyloseq data to MetagenomeSeq MRexperiment object — phyloseq2metagenomeSeq","text":"metagenomeSeq::MRexperiment object.","code":""},{"path":[]},{"path":"/reference/phyloseq2metagenomeSeq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert phyloseq data to MetagenomeSeq MRexperiment object — phyloseq2metagenomeSeq","text":"","code":"data(caporaso) phyloseq2metagenomeSeq(caporaso) #> MRexperiment (storageMode: environment) #> assayData: 3426 features, 34 samples  #>   element names: counts  #> protocolData: none #> phenoData #>   sampleNames: L1S140 L1S208 ... L2S240 (34 total) #>   varLabels: SampleType Year ... Description (8 total) #>   varMetadata: labelDescription #> featureData #>   featureNames: New.CleanUp.ReferenceOTU647 14030 ... 3769033 (3426 #>     total) #>   fvarLabels: OTUname Kingdom ... Species (8 total) #>   fvarMetadata: labelDescription #> experimentData: use 'experimentData(object)' #> Annotation:"},{"path":"/reference/postHocTest-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The postHocTest Class, represents the result of post-hoc test result among\nmultiple groups — postHocTest-class","title":"The postHocTest Class, represents the result of post-hoc test result among\nmultiple groups — postHocTest-class","text":"postHocTest Class, represents result post-hoc test result among multiple groups","code":""},{"path":"/reference/postHocTest-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The postHocTest Class, represents the result of post-hoc test result among\nmultiple groups — postHocTest-class","text":"","code":"# S4 method for postHocTest show(object)"},{"path":"/reference/postHocTest-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The postHocTest Class, represents the result of post-hoc test result among\nmultiple groups — postHocTest-class","text":"object postHocTest-class object","code":""},{"path":"/reference/postHocTest-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The postHocTest Class, represents the result of post-hoc test result among\nmultiple groups — postHocTest-class","text":"postHocTest object.","code":""},{"path":"/reference/postHocTest-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The postHocTest Class, represents the result of post-hoc test result among\nmultiple groups — postHocTest-class","text":"result IRanges::DataFrameList, DataFrame consists five variables: comparisons: character, specify two groups test (group names separated \"_) diff_mean: numeric, difference mean abundances pvalue: numeric, p values ci_lower ci_upper: numeric, lower upper confidence interval difference mean abundances abundance abundance feature group conf_level confidence level method method used post-hoc test method_str method illustration","code":""},{"path":"/reference/postHocTest-class.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The postHocTest Class, represents the result of post-hoc test result among\nmultiple groups — postHocTest-class","text":"Yang Cao","code":""},{"path":"/reference/postHocTest.html","id":null,"dir":"Reference","previous_headings":"","what":"Build postHocTest object — postHocTest","title":"Build postHocTest object — postHocTest","text":"function used create postHocTest object, used developers.","code":""},{"path":"/reference/postHocTest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build postHocTest object — postHocTest","text":"","code":"postHocTest(   result,   abundance,   conf_level = 0.95,   method = \"tukey\",   method_str = paste(\"Posthoc multiple comparisons of means: \", method) )"},{"path":"/reference/postHocTest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build postHocTest object — postHocTest","text":"result IRanges::SimpleDFrameList object. abundance data.frame. conf_level numeric, confidence level. method character, method posthoc test. method_str character, illustrates method used posthoc test.","code":""},{"path":"/reference/postHocTest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build postHocTest object — postHocTest","text":"postHocTest object.","code":""},{"path":"/reference/postHocTest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build postHocTest object — postHocTest","text":"","code":"if (FALSE) { require(IRanges) pht <- postHocTest(     result = DataFrameList(         featureA = DataFrame(             comparisons = c(\"group2-group1\",                 \"group3-group1\",                 \"group3-group2\"),             diff_mean = runif(3),             pvalue = rep(0.01, 3),             ci_lower = rep(0.01, 3),             ci_upper = rep(0.011, 3)         ),         featureB = DataFrame(             comparisons = c(\"group2-group1\",                 \"group3-group1\",                 \"group3-group2\"),             diff_mean = runif(3),             pvalue = rep(0.01, 3),             ci_lower = rep(0.01, 3),             ci_upper = rep(0.011, 3)         )     ),     abundance = data.frame(         featureA = runif(3),         featureB = runif(3),         group = c(\"group1\", \"group2\", \"grou3\")     ) ) pht }"},{"path":"/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. magrittr %>% phyloseq import_biom, import_mothur, import_qiime, nsamples, ntaxa, otu_table, sample_data, sample_names, tax_table, taxa_names","code":""},{"path":"/reference/run_ANOSIM.html","id":null,"dir":"Reference","previous_headings":"","what":"Analysis of Similarity (ANOSIM) — run_ANOSIM","title":"Analysis of Similarity (ANOSIM) — run_ANOSIM","text":"run_ANOSIM function used identify association community environmental variables rank.","code":""},{"path":"/reference/run_ANOSIM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analysis of Similarity (ANOSIM) — run_ANOSIM","text":"","code":"run_ANOSIM(object,                   variable,                   method,                   seedNum,                   alpha)"},{"path":"/reference/run_ANOSIM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analysis of Similarity (ANOSIM) — run_ANOSIM","text":"object (Required). phyloseq::phyloseq Biobase::ExpressionSet object. variable (Required). character. grouping variable test. method (Optional). character. Provide one currently supported options. See distanceMethodList detailed list supported options links accompanying documentation. Options include: \"unifrac\" : unweighted UniFrac distance. \"wunifrac\": weighted-UniFrac distance. \"GUniFrac\": variance-adjusted weighted UniFrac distances (default: alpha=0.5). \"bray\": bray crutis distance. \"dpcoa\": sample-wise distance used Double Principle Coordinate Analysis. \"jsd\": Jensen-Shannon Divergence. Alternatively, can provide character string defines custom distance method, form described designdist (default: \"bray\"). seedNum (Optional). numeric. specify seeds reproduction (default: 123). alpha (Optional). numeric. parameter \"GUniFrac\" controlling weight abundant lineages (default: 0.5).","code":""},{"path":"/reference/run_ANOSIM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analysis of Similarity (ANOSIM) — run_ANOSIM","text":"ANOSIM model.","code":""},{"path":"/reference/run_ANOSIM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analysis of Similarity (ANOSIM) — run_ANOSIM","text":"run_ANOSIM function used identify association community environmental variables rank, applying distance profile calculating R statistic community rank variable permutation test determine significance. can applied phyloseq::phyloseq Biobase::ExpressionSet object.","code":""},{"path":"/reference/run_ANOSIM.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Analysis of Similarity (ANOSIM) — run_ANOSIM","text":"Clarke, K. Robert. \"Non‐parametric multivariate analyses changes community structure.\" Australian journal ecology 18.1 (1993): 117-143.","code":""},{"path":"/reference/run_ANOSIM.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Analysis of Similarity (ANOSIM) — run_ANOSIM","text":"Created Hua Zou (5/15/2022 Shenzhen China)","code":""},{"path":"/reference/run_ANOSIM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analysis of Similarity (ANOSIM) — run_ANOSIM","text":"","code":"if (FALSE) { data(\"enterotypes_arumugam\") run_ANOSIM(enterotypes_arumugam, variable = \"Enterotype\", method = \"bray\") }"},{"path":"/reference/run_CI.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Interval — run_CI","title":"Confidence Interval — run_CI","text":"Calculates confidence interval vector data.","code":""},{"path":"/reference/run_CI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Interval — run_CI","text":"","code":"run_CI(x, ci = 0.95)"},{"path":"/reference/run_CI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Interval — run_CI","text":"x (Required). vector. vector data. ci (optional). numeric. confidence interval calculated.","code":""},{"path":"/reference/run_CI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Interval — run_CI","text":"upper Upper bound interval. mean Mean data. lower Lower bound interval.","code":""},{"path":"/reference/run_CI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Confidence Interval — run_CI","text":"https://github.com/cran/Rmisc/","code":""},{"path":"/reference/run_CI.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Confidence Interval — run_CI","text":"Created Hua Zou (5/19/2022 Shenzhen China)","code":""},{"path":"/reference/run_CI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Interval — run_CI","text":"","code":"run_CI(rnorm(100)) #>       upper        mean       lower  #>  0.24935601  0.07716041 -0.09503520"},{"path":"/reference/run_MANTEL.html","id":null,"dir":"Reference","previous_headings":"","what":"Mantel Test (MANTEL) — run_MANTEL","title":"Mantel Test (MANTEL) — run_MANTEL","text":"run_MANTEL function used identify association community environmental variables.","code":""},{"path":"/reference/run_MANTEL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mantel Test (MANTEL) — run_MANTEL","text":"","code":"run_MANTEL(object,                   y_variables,                   z_variables,                   norm,                   method,                   method_cor,                   method_dist,                   seedNum,                   alpha)"},{"path":"/reference/run_MANTEL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mantel Test (MANTEL) — run_MANTEL","text":"object (Required). phyloseq::phyloseq Biobase::ExpressionSet object. y_variables (Required). vector. variables control matrix Y. z_variables (Optional). vector. variables control matrix Z (default: NULL). norm (Optional). logical. whether norm y z matrix unit scale (default: TRUE). method (Required). character. Mantel test method, \"mantel\" \"mantel.partial\" \"mantel.randtest\", \"mantel.rtest\" (default: \"mantel\"). method_cor (Optional). character. Correlation method, accepted cor: \"pearson\", \"spearman\" \"kendall\" (default: \"spearman\"). method_dist (Required). character. methods three(X, Y, Z matrix) distance matrices. Provide one currently supported options. See distanceMethodList detailed list supported options links accompanying documentation. Options include: \"unifrac\" : unweighted UniFrac distance. \"wunifrac\": weighted-UniFrac distance. \"GUniFrac\": variance-adjusted weighted UniFrac distances (default: alpha=0.5). \"bray\": bray crutis distance. \"dpcoa\": sample-wise distance used Double Principle Coordinate Analysis. \"jsd\": Jensen-Shannon Divergence. Alternatively, can provide character string defines custom distance method, form described designdist (default: c(\"bray\", \"euclidean\", \"jaccard\")). seedNum (Optional). numeric. specify seeds reproduction (default: 123). alpha (Optional). numeric. parameter \"GUniFrac\" controlling weight abundant lineages (default: 0.5).","code":""},{"path":"/reference/run_MANTEL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mantel Test (MANTEL) — run_MANTEL","text":"Mantel test model.","code":""},{"path":"/reference/run_MANTEL.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mantel Test (MANTEL) — run_MANTEL","text":"run_MANTEL function used test correlation two distance matrices, calculating Z statistic community distance variables distance determine significance. Mantel test used compare two distance (dissimilarity) matrices, X Y, partial Mantel test used estimate correlation two matrices, controlling effect control matrix Z. can applied phyloseq::phyloseq Biobase::ExpressionSet object.","code":""},{"path":"/reference/run_MANTEL.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Mantel Test (MANTEL) — run_MANTEL","text":"Mantel, Nathan. \"detection disease clustering generalized regression approach.\" Cancer research 27.2 Part 1 (1967): 209-220.","code":""},{"path":"/reference/run_MANTEL.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Mantel Test (MANTEL) — run_MANTEL","text":"Created Hua Zou (5/15/2022 Shenzhen China)","code":""},{"path":"/reference/run_MANTEL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mantel Test (MANTEL) — run_MANTEL","text":"","code":"if (FALSE) { data(\"enterotypes_arumugam\") run_MANTEL(enterotypes_arumugam,           y_variables = c(\"Enterotype\", \"Clinical.Status\"),           z_variables = c(\"Nationality\", \"Gender\"),           norm = FALSE,           method = \"mantel.partial\",           method_dist = c(\"bray\", \"euclidean\", \"jaccard\")) }"},{"path":"/reference/run_MRPP.html","id":null,"dir":"Reference","previous_headings":"","what":"Multi-response Permutation Procedures (MRPP) — run_MRPP","title":"Multi-response Permutation Procedures (MRPP) — run_MRPP","text":"run_MRPP function used identify association community environmental variables average distance.","code":""},{"path":"/reference/run_MRPP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multi-response Permutation Procedures (MRPP) — run_MRPP","text":"","code":"run_MRPP(object,                 variable,                 method,                 seedNum,                 alpha)"},{"path":"/reference/run_MRPP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multi-response Permutation Procedures (MRPP) — run_MRPP","text":"object (Required). phyloseq::phyloseq Biobase::ExpressionSet object. variable (Required). character. grouping variable test. method (Optional). character. Provide one currently supported options. See distanceMethodList detailed list supported options links accompanying documentation. Options include: \"unifrac\" : unweighted UniFrac distance. \"wunifrac\": weighted-UniFrac distance. \"GUniFrac\": variance-adjusted weighted UniFrac distances (default: alpha=0.5). \"bray\": bray crutis distance. \"dpcoa\": sample-wise distance used Double Principle Coordinate Analysis. \"jsd\": Jensen-Shannon Divergence. Alternatively, can provide character string defines custom distance method, form described designdist (default: \"bray\"). seedNum (Optional). numeric. specify seeds reproduction (default: 123). alpha (Optional). numeric. parameter \"GUniFrac\" controlling weight abundant lineages (default: 0.5).","code":""},{"path":"/reference/run_MRPP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multi-response Permutation Procedures (MRPP) — run_MRPP","text":"MRPP model.","code":""},{"path":"/reference/run_MRPP.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multi-response Permutation Procedures (MRPP) — run_MRPP","text":"run_MRPP function used identify association community environmental variables average distance, applying distance profile calculating delta statistic community variable permutation test determine significance. can applied phyloseq::phyloseq Biobase::ExpressionSet object.","code":""},{"path":"/reference/run_MRPP.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Multi-response Permutation Procedures (MRPP) — run_MRPP","text":"Mielke Jr, Paul W. \"application multivariate permutation methods based distance functions earth sciences.\" Earth-Science Reviews 31.1 (1991): 55-71.","code":""},{"path":"/reference/run_MRPP.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Multi-response Permutation Procedures (MRPP) — run_MRPP","text":"Created Hua Zou (5/15/2022 Shenzhen China)","code":""},{"path":"/reference/run_MRPP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multi-response Permutation Procedures (MRPP) — run_MRPP","text":"","code":"if (FALSE) { data(\"enterotypes_arumugam\") run_MRPP(enterotypes_arumugam, variable = \"Enterotype\", method = \"bray\") }"},{"path":"/reference/run_OddRatio.html","id":null,"dir":"Reference","previous_headings":"","what":"95% confidential interval Odds Ratio — run_OddRatio","title":"95% confidential interval Odds Ratio — run_OddRatio","text":"Odds ratio shows ratio probability Group1 Group2, indicating risk groups. run_OddRatio used glm scaled values calculate coefficients groups obtain 95% confidential interval.","code":""},{"path":"/reference/run_OddRatio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"95% confidential interval Odds Ratio — run_OddRatio","text":"","code":"run_OddRatio(datx, daty, GroupName)"},{"path":"/reference/run_OddRatio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"95% confidential interval Odds Ratio — run_OddRatio","text":"datx (Required). Data.frame. Metadata SampleID Group information. daty (Required). Data.frame. Profile SampleID, ordered datx (Row->Features; Column->SampleID). GroupName (Required). Character. contrast group.","code":""},{"path":"/reference/run_OddRatio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"95% confidential interval Odds Ratio — run_OddRatio","text":"95% confidential interval Odds Ratio per feature","code":""},{"path":"/reference/run_OddRatio.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"95% confidential interval Odds Ratio — run_OddRatio","text":"Created Hua Zou (12/13/2021 Guangzhou China)","code":""},{"path":"/reference/run_PERMANOVA.html","id":null,"dir":"Reference","previous_headings":"","what":"Permutational multivariate analysis of variance (PERMANOVA) — run_PERMANOVA","title":"Permutational multivariate analysis of variance (PERMANOVA) — run_PERMANOVA","text":"run_PERMANOVA function used identify association community environmental variables.","code":""},{"path":"/reference/run_PERMANOVA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Permutational multivariate analysis of variance (PERMANOVA) — run_PERMANOVA","text":"","code":"run_PERMANOVA(object,                      variables,                      method,                      seedNum,                      alpha)"},{"path":"/reference/run_PERMANOVA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Permutational multivariate analysis of variance (PERMANOVA) — run_PERMANOVA","text":"object (Required). phyloseq::phyloseq Biobase::ExpressionSet object. variables (Optional). vector. variables test. method (Optional). character. Provide one currently supported options. See distanceMethodList detailed list supported options links accompanying documentation. Options include: \"unifrac\" : unweighted UniFrac distance. \"wunifrac\": weighted-UniFrac distance. \"GUniFrac\": variance-adjusted weighted UniFrac distances (default: alpha=0.5). \"bray\": bray crutis distance. \"dpcoa\": sample-wise distance used Double Principle Coordinate Analysis. \"jsd\": Jensen-Shannon Divergence. Alternatively, can provide character string defines custom distance method, form described designdist (default: \"bray\"). seedNum (Optional). numeric. specify seeds reproduction (default: 123). alpha (Optional). numeric. parameter \"GUniFrac\" controlling weight abundant lineages (default: 0.5).","code":""},{"path":"/reference/run_PERMANOVA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Permutational multivariate analysis of variance (PERMANOVA) — run_PERMANOVA","text":"data.frame PERMANOVA result.","code":""},{"path":"/reference/run_PERMANOVA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Permutational multivariate analysis of variance (PERMANOVA) — run_PERMANOVA","text":"run_PERMANOVA function used identify association community environmental variables, applying distance profile calculating F statistic community variable permutation test determine significance. can applied phyloseq::phyloseq Biobase::ExpressionSet object.","code":""},{"path":"/reference/run_PERMANOVA.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Permutational multivariate analysis of variance (PERMANOVA) — run_PERMANOVA","text":"Anderson, Marti J. \"Permutational multivariate analysis variance.\" Department Statistics, University Auckland, Auckland 26 (2005): 32-46.","code":""},{"path":"/reference/run_PERMANOVA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Permutational multivariate analysis of variance (PERMANOVA) — run_PERMANOVA","text":"Created Hua Zou (5/14/2022 Shenzhen China)","code":""},{"path":"/reference/run_PERMANOVA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Permutational multivariate analysis of variance (PERMANOVA) — run_PERMANOVA","text":"","code":"if (FALSE) { data(\"enterotypes_arumugam\") run_PERMANOVA(enterotypes_arumugam, method = \"bray\") }"},{"path":"/reference/run_STDERR.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard Error — run_STDERR","title":"Standard Error — run_STDERR","text":"Calculates standard error interval vector data","code":""},{"path":"/reference/run_STDERR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard Error — run_STDERR","text":"","code":"run_STDERR(x)"},{"path":"/reference/run_STDERR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standard Error — run_STDERR","text":"x (Required). vector. vector data.","code":""},{"path":"/reference/run_STDERR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standard Error — run_STDERR","text":"upper Upper bound interval. mean Mean data. lower Lower bound interval.","code":""},{"path":"/reference/run_STDERR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Standard Error — run_STDERR","text":"https://github.com/cran/Rmisc/","code":""},{"path":"/reference/run_STDERR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Standard Error — run_STDERR","text":"Created Hua Zou (5/19/2022 Shenzhen China)","code":""},{"path":"/reference/run_STDERR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standard Error — run_STDERR","text":"","code":"run_STDERR(rnorm(100)) #>       upper        mean       lower  #> -0.01077483 -0.10999282 -0.20921082"},{"path":"/reference/run_aldex.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform differential analysis using ALDEx2 — run_aldex","title":"Perform differential analysis using ALDEx2 — run_aldex","text":"run_aldex function used identify significant features.","code":""},{"path":"/reference/run_aldex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform differential analysis using ALDEx2 — run_aldex","text":"","code":"run_aldex(   ps,   group,   taxa_rank = \"all\",   transform = c(\"identity\", \"log10\", \"log10p\"),   norm = \"none\",   norm_para = list(),   method = c(\"t.test\", \"wilcox.test\", \"kruskal\", \"glm_anova\"),   p_adjust = c(\"none\", \"fdr\", \"bonferroni\", \"holm\", \"hochberg\", \"hommel\", \"BH\", \"BY\"),   pvalue_cutoff = 0.05,   mc_samples = 128,   denom = c(\"all\", \"iqlr\", \"zero\", \"lvha\"),   paired = FALSE )"},{"path":"/reference/run_aldex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform differential analysis using ALDEx2 — run_aldex","text":"ps phyloseq::phyloseq object group character, variable set group taxa_rank character specify taxonomic rank perform differential analysis . one phyloseq::rank_names(phyloseq), \"\" means summarize taxa top taxa ranks (summarize_taxa(ps, level = rank_names(ps)[1])), \"none\" means perform differential analysis original taxa (taxa_names(phyloseq), e.g., OTU ASV). transform character, methods used transform microbial abundance. See transform_abundances() details. options include: \"identity\", return original data without transformation (default). \"log10\", transformation log10(object), data contains zeros transformation log10(1 + object). \"log10p\", transformation log10(1 + object). norm methods used normalize microbial abundance data. See normalize() details. Options include: \"none\": normalize. \"rarefy\": random subsampling counts smallest library size data set. \"TSS\": total sum scaling, also referred \"relative abundance\", abundances normalized dividing corresponding sample library size. \"TMM\": trimmed mean m-values. First, sample chosen reference. scaling factor derived using weighted trimmed mean differences log-transformed gene-count fold-change sample reference. \"RLE\", relative log expression, RLE uses pseudo-reference calculated using geometric mean gene-specific abundances samples. scaling factors calculated median gene counts ratios samples reference. \"CSS\": cumulative sum scaling, calculates scaling factors cumulative sum gene abundances data-derived threshold. \"CLR\": centered log-ratio normalization. \"CPM\": pre-sample normalization sum values 1e+06. norm_para arguments passed specific normalization methods method test method, options include: \"t.test\" \"wilcox.test\" two groups comparison,  \"kruskal\" \"glm_anova\" multiple groups comparison. p_adjust method multiple test correction, default none, details see stats::p.adjust. pvalue_cutoff cutoff p value, default 0.05. mc_samples integer, number Monte Carlo samples use underlying distributions estimation, 128 usually sufficient. denom character string, specifiy features used denominator geometric mean calculation. Options : \"\", features. \"iqlr\", accounts data systematic variation centers features set features variance lower upper quartile variance. \"zero\", extreme case many non-zero features one condition many zeros another. case geometric mean group calculated using set per-group non-zero features. \"lvha\", house keeping features. paired logical, whether perform paired tests, worked method \"t.test\" \"wilcox.test\".","code":""},{"path":"/reference/run_aldex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform differential analysis using ALDEx2 — run_aldex","text":"microbiomeMarker object.","code":""},{"path":"/reference/run_aldex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform differential analysis using ALDEx2 — run_aldex","text":"run_aldex function used identify significant features. can applied phyloseq::phyloseq Biobase::ExpressionSet object.","code":""},{"path":"/reference/run_aldex.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform differential analysis using ALDEx2 — run_aldex","text":"Fernandes, .D., Reid, J.N., Macklaim, J.M. et al. Unifying analysis high-throughput sequencing datasets: characterizing RNA-seq, 16S rRNA gene sequencing selective growth experiments compositional data analysis. Microbiome 2, 15 (2014).","code":""},{"path":[]},{"path":"/reference/run_aldex.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perform differential analysis using ALDEx2 — run_aldex","text":"Created Yang Cao; modified Hua Zou (5/17/2022 Shenzhen China)","code":""},{"path":"/reference/run_aldex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform differential analysis using ALDEx2 — run_aldex","text":"","code":"if (FALSE) { data(enterotypes_arumugam) ps <- phyloseq::subset_samples(     enterotypes_arumugam,     Enterotype %in% c(\"Enterotype 3\", \"Enterotype 2\") ) run_aldex(ps, group = \"Enterotype\") }"},{"path":"/reference/run_ancom.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform differential analysis using ANCOM — run_ancom","title":"Perform differential analysis using ANCOM — run_ancom","text":"Perform significant test comparing pairwise log ratios features.","code":""},{"path":"/reference/run_ancom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform differential analysis using ANCOM — run_ancom","text":"","code":"run_ancom(   ps,   group,   confounders = character(0),   taxa_rank = \"all\",   transform = c(\"identity\", \"log10\", \"log10p\"),   norm = \"TSS\",   norm_para = list(),   p_adjust = c(\"none\", \"fdr\", \"bonferroni\", \"holm\", \"hochberg\", \"hommel\", \"BH\", \"BY\"),   pvalue_cutoff = 0.05,   W_cutoff = 0.75 )"},{"path":"/reference/run_ancom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform differential analysis using ANCOM — run_ancom","text":"ps phyloseq-class object. group character, variable set group. confounders character vector, confounding variables adjusted. default character(0), indicating confounding variable. taxa_rank character specify taxonomic rank perform differential analysis . one phyloseq::rank_names(phyloseq), \"\" means summarize taxa top taxa ranks (summarize_taxa(ps, level = rank_names(ps)[1])), \"none\" means perform differential analysis original taxa (taxa_names(phyloseq), e.g., OTU ASV). transform character, methods used transform microbial abundance. See transform_abundances() details. options include: \"identity\", return original data without transformation. \"log10\", transformation log10(object), data contains zeros transformation log10(1 + object). \"log10p\", transformation log10(1 + object). norm methods used normalize microbial abundance data. See normalize() details. Options include: \"none\": normalize. \"rarefy\": random subsampling counts smallest library size data set. \"TSS\": total sum scaling, also referred \"relative abundance\", abundances normalized dividing corresponding sample library size. \"TMM\": trimmed mean m-values. First, sample chosen reference. scaling factor derived using weighted trimmed mean differences log-transformed gene-count fold-change sample reference. \"RLE\", relative log expression, RLE uses pseudo-reference calculated using geometric mean gene-specific abundances samples. scaling factors calculated median gene counts ratios samples reference. \"CSS\": cumulative sum scaling, calculates scaling factors cumulative sum gene abundances data-derived threshold. \"CLR\": centered log-ratio normalization. \"CPM\": pre-sample normalization sum values 1e+06. norm_para named list. arguments passed specific normalization methods.  users need pass additional arguments . p_adjust method multiple test correction, default none, details see stats::p.adjust. pvalue_cutoff significance level statistical tests, default 0.05. W_cutoff lower bound proportion W-statistic, default 0.7.","code":""},{"path":"/reference/run_ancom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform differential analysis using ANCOM — run_ancom","text":"microbiomeMarker object, slot marker_table contains four variables: feature, significantly different features. enrich_group, class differential features enriched. effect_size, differential means two groups, F statistic two groups. W, W-statistic, number features single feature tested significantly different .","code":""},{"path":"/reference/run_ancom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform differential analysis using ANCOM — run_ancom","text":"experiment two treatments, tests following hypothesis feature \\(\\): $$H_{0i}: E(log(\\mu_i^1)) =  E(log(\\mu_i^2))$$ \\(\\mu_i^1\\) \\(\\mu_i^2\\) mean abundances feature \\(\\) two groups. developers method recommend following significance tests 2 groups, use non-parametric Wilcoxon rank sum test stats::wilcox.test(). 2 groups, use nonparametric stats::kruskal.test() one-way ANOVA stats::aov().","code":""},{"path":"/reference/run_ancom.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform differential analysis using ANCOM — run_ancom","text":"Mandal et al. \"Analysis composition microbiomes: novel method studying microbial composition\", Microbial Ecology Health & Disease, (2015), 26.","code":""},{"path":"/reference/run_ancom.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perform differential analysis using ANCOM — run_ancom","text":"Huang Lin, Yang Cao","code":""},{"path":"/reference/run_ancom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform differential analysis using ANCOM — run_ancom","text":"","code":"# \\donttest{ data(enterotypes_arumugam) ps <- phyloseq::subset_samples(     enterotypes_arumugam,     Enterotype %in% c(\"Enterotype 3\", \"Enterotype 2\") ) run_ancom(ps, group = \"Enterotype\") #> microbiomeMarker-class inherited from phyloseq-class #> normalization method:              [ TSS ] #> microbiome marker identity method: [ ANCOM ] #> marker_table() Marker Table:       [ 13 microbiome markers with 4 variables ] #> otu_table()    OTU Table:          [ 235 taxa and  24 samples ] #> sample_data()  Sample Data:        [ 24 samples by  9 sample variables ] #> tax_table()    Taxonomy Table:     [ 235 taxa by 1 taxonomic ranks ] # }"},{"path":"/reference/run_ancombc.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential analysis of compositions of microbiomes with bias correction\n(ANCOM-BC). — run_ancombc","title":"Differential analysis of compositions of microbiomes with bias correction\n(ANCOM-BC). — run_ancombc","text":"Differential abundance analysis microbial absolute abundance data. function wrapper ANCOMBC::ancombc().","code":""},{"path":"/reference/run_ancombc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential analysis of compositions of microbiomes with bias correction\n(ANCOM-BC). — run_ancombc","text":"","code":"run_ancombc(   ps,   group,   confounders = character(0),   contrast = NULL,   taxa_rank = \"all\",   transform = c(\"identity\", \"log10\", \"log10p\"),   norm = \"none\",   norm_para = list(),   p_adjust = c(\"none\", \"fdr\", \"bonferroni\", \"holm\", \"hochberg\", \"hommel\", \"BH\", \"BY\"),   zero_cut = 0.9,   lib_cut = 0,   struc_zero = FALSE,   neg_lb = FALSE,   tol = 1e-05,   max_iter = 100,   conserve = FALSE,   pvalue_cutoff = 0.05 )"},{"path":"/reference/run_ancombc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential analysis of compositions of microbiomes with bias correction\n(ANCOM-BC). — run_ancombc","text":"ps phyloseq::phyloseq object, consists feature table, sample metadata taxonomy table. group name group variable metadata. Specifying group required detecting structural zeros performing global test. confounders character vector, confounding variables adjusted. default character(0), indicating confounding variable. contrast parameter used two groups comparison multiple groups. please see following details. taxa_rank character specify taxonomic rank perform differential analysis . one phyloseq::rank_names(phyloseq), \"\" means summarize taxa top taxa ranks (summarize_taxa(ps, level = rank_names(ps)[1])), \"none\" means perform differential analysis original taxa (taxa_names(phyloseq), e.g., OTU ASV). transform character, methods used transform microbial abundance. See transform_abundances() details. options include: \"identity\", return original data without transformation (default). \"log10\", transformation log10(object), data contains zeros transformation log10(1 + object). \"log10p\", transformation log10(1 + object). norm methods used normalize microbial abundance data. See normalize() details. Options include: \"none\": normalize. \"rarefy\": random subsampling counts smallest library size data set. \"TSS\": total sum scaling, also referred \"relative abundance\", abundances normalized dividing corresponding sample library size. \"TMM\": trimmed mean m-values. First, sample chosen reference. scaling factor derived using weighted trimmed mean differences log-transformed gene-count fold-change sample reference. \"RLE\", relative log expression, RLE uses pseudo-reference calculated using geometric mean gene-specific abundances samples. scaling factors calculated median gene counts ratios samples reference. \"CSS\": cumulative sum scaling, calculates scaling factors cumulative sum gene abundances data-derived threshold. \"CLR\": centered log-ratio normalization. \"CPM\": pre-sample normalization sum values 1e+06. norm_para named list. arguments passed specific normalization methods.  users need pass additional arguments . p_adjust method adjust p-values . Default \"holm\". Options include \"holm\", \"hochberg\", \"hommel\", \"bonferroni\", \"BH\", \"\", \"fdr\", \"none\". See stats::p.adjust() details. zero_cut numerical fraction 0 1. Taxa proportion zeroes greater zero_cut excluded analysis. Default 0.90. lib_cut numerical threshold filtering samples based library sizes. Samples library sizes less lib_cut excluded analysis. Default 0, .e. filter sample. struc_zero whether detect structural zeros. Default FALSE. neg_lb whether classify taxon structural zero corresponding study group using asymptotic lower bound. Default FALSE. tol iteration convergence tolerance E-M algorithm. Default 1e-05. max_iter maximum number iterations E-M algorithm. Default 100. conserve whether use conservative variance estimate test statistic. recommended sample size small /number differentially abundant taxa believed large. Default FALSE. pvalue_cutoff level significance. Default 0.05.","code":""},{"path":"/reference/run_ancombc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential analysis of compositions of microbiomes with bias correction\n(ANCOM-BC). — run_ancombc","text":"microbiomeMarker object.","code":""},{"path":"/reference/run_ancombc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential analysis of compositions of microbiomes with bias correction\n(ANCOM-BC). — run_ancombc","text":"contrast must two length character NULL (default). required set manually two groups comparison multiple groups. order determines direction comparison, first element used specify reference group (control). means , first element denominator fold change, second element used baseline (numerator fold change). Otherwise, users required concern parameter (set default NULL), two groups, first level groups set reference group; multiple groups, perform ANOVA-like testing find markers difference groups.","code":""},{"path":"/reference/run_ancombc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Differential analysis of compositions of microbiomes with bias correction\n(ANCOM-BC). — run_ancombc","text":"Lin, Huang, Shyamal Das Peddada. \"Analysis compositions microbiomes bias correction.\" Nature communications 11.1 (2020): 1-11.","code":""},{"path":[]},{"path":"/reference/run_ancombc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential analysis of compositions of microbiomes with bias correction\n(ANCOM-BC). — run_ancombc","text":"","code":"data(enterotypes_arumugam) ps <- phyloseq::subset_samples(     enterotypes_arumugam,     Enterotype %in% c(\"Enterotype 3\", \"Enterotype 2\") ) run_ancombc(ps, group = \"Enterotype\") #> Warning: The multi-group comparison will be deactivated as the group variable has < 3 categories #> microbiomeMarker-class inherited from phyloseq-class #> normalization method:              [ none ] #> microbiome marker identity method: [ ancombc ] #> marker_table() Marker Table:       [ 26 microbiome markers with 5 variables ] #> otu_table()    OTU Table:          [ 235 taxa and  24 samples ] #> sample_data()  Sample Data:        [ 24 samples by  9 sample variables ] #> tax_table()    Taxonomy Table:     [ 235 taxa by 1 taxonomic ranks ]"},{"path":"/reference/run_betadisper.html","id":null,"dir":"Reference","previous_headings":"","what":"Multivariate homogeneity of groups dispersions (variances) — run_betadisper","title":"Multivariate homogeneity of groups dispersions (variances) — run_betadisper","text":"run_betadisper function multivariate analogue Levene's test homogeneity variances.","code":""},{"path":"/reference/run_betadisper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multivariate homogeneity of groups dispersions (variances) — run_betadisper","text":"","code":"run_betadisper(object,                   variable,                   type,                   method,                   seedNum,                   alpha)"},{"path":"/reference/run_betadisper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multivariate homogeneity of groups dispersions (variances) — run_betadisper","text":"object (Required). phyloseq::phyloseq Biobase::ExpressionSet object. variable (Required). character. grouping variable test. type (Optional). character. type analysis perform. Use spatial \"median\" group \"centroid\" (default: \"median\"). method (Optional). character. Provide one currently supported options. See distanceMethodList detailed list supported options links accompanying documentation. Options include: \"unifrac\" : unweighted UniFrac distance. \"wunifrac\": weighted-UniFrac distance. \"GUniFrac\": variance-adjusted weighted UniFrac distances (default: alpha=0.5). \"bray\": bray crutis distance. \"dpcoa\": sample-wise distance used Double Principle Coordinate Analysis. \"jsd\": Jensen-Shannon Divergence. Alternatively, can provide character string defines custom distance method, form described designdist (default: \"bray\"). seedNum (Optional). numeric. specify seeds reproduction (default: 123). alpha (Optional). numeric. parameter \"GUniFrac\" controlling weight abundant lineages (default: 0.5).","code":""},{"path":"/reference/run_betadisper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multivariate homogeneity of groups dispersions (variances) — run_betadisper","text":"betadisper model.","code":""},{"path":"/reference/run_betadisper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Multivariate homogeneity of groups dispersions (variances) — run_betadisper","text":"One measure multivariate dispersion (variance) group samples calculate average distance group members group centroid spatial median (referred 'centroid' now unless stated otherwise) multivariate space. test dispersions (variances) one groups different, distances group members group centroid subject ANOVA. multivariate analogue Levene's test homogeneity variances distances group members group centroids Euclidean distance. See ?vegan::betadisper details. can applied phyloseq::phyloseq Biobase::ExpressionSet object.","code":""},{"path":"/reference/run_betadisper.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Multivariate homogeneity of groups dispersions (variances) — run_betadisper","text":"Anderson, Marti J., Kari E. Ellingsen, Brian H. McArdle. \"Multivariate dispersion measure beta diversity.\" Ecology letters 9.6 (2006): 683-693.","code":""},{"path":"/reference/run_betadisper.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Multivariate homogeneity of groups dispersions (variances) — run_betadisper","text":"Created Hua Zou (5/15/2022 Shenzhen China)","code":""},{"path":"/reference/run_betadisper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multivariate homogeneity of groups dispersions (variances) — run_betadisper","text":"","code":"if (FALSE) { data(\"enterotypes_arumugam\") run_betadisper(enterotypes_arumugam, variable = \"Enterotype\", method = \"bray\") }"},{"path":"/reference/run_deseq2.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform DESeq differential analysis — run_deseq2","title":"Perform DESeq differential analysis — run_deseq2","text":"Differential expression analysis based Negative Binomial distribution using DESeq2.","code":""},{"path":"/reference/run_deseq2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform DESeq differential analysis — run_deseq2","text":"","code":"run_deseq2(   ps,   group,   confounders = character(0),   contrast = NULL,   taxa_rank = \"all\",   norm = \"RLE\",   norm_para = list(),   transform = c(\"identity\", \"log10\", \"log10p\"),   fitType = c(\"parametric\", \"local\", \"mean\", \"glmGamPoi\"),   sfType = \"poscounts\",   betaPrior = FALSE,   modelMatrixType,   useT = FALSE,   minmu = ifelse(fitType == \"glmGamPoi\", 1e-06, 0.5),   p_adjust = c(\"none\", \"fdr\", \"bonferroni\", \"holm\", \"hochberg\", \"hommel\", \"BH\", \"BY\"),   pvalue_cutoff = 0.05,   ... )"},{"path":"/reference/run_deseq2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform DESeq differential analysis — run_deseq2","text":"ps phyloseq::phyloseq object. group character, variable set group, must one var sample metadata. confounders character vector, confounding variables adjusted. default character(0), indicating confounding variable. contrast parameter used two groups comparison multiple groups. please see following details. taxa_rank character specify taxonomic rank perform differential analysis . one phyloseq::rank_names(phyloseq), \"\" means summarize taxa top taxa ranks (summarize_taxa(ps, level = rank_names(ps)[1])), \"none\" means perform differential analysis original taxa (taxa_names(phyloseq), e.g., OTU ASV). norm methods used normalize microbial abundance data. See normalize() details. Options include: \"none\": normalize. \"rarefy\": random subsampling counts smallest library size data set. \"TMM\": trimmed mean m-values. First, sample chosen reference. scaling factor derived using weighted trimmed mean differences log-transformed gene-count fold-change sample reference. \"RLE\", relative log expression, RLE uses pseudo-reference calculated using geometric mean gene-specific abundances samples. scaling factors calculated median gene counts ratios samples reference. \"CSS\": cumulative sum scaling, calculates scaling factors cumulative sum gene abundances data-derived threshold. norm_para arguments passed specific normalization methods. users need pass additional arguments . transform character, methods used transform microbial abundance. See transform_abundances() details. options include: \"identity\", return original data without transformation (default). \"log10\", transformation log10(object), data contains zeros transformation log10(1 + object). \"log10p\", transformation log10(1 + object). fitType, sfType, betaPrior, modelMatrixType, useT, minmu seven parameters inherited form DESeq2::DESeq(). fitType, either \"parametric\", \"local\", \"mean\", \"glmGamPoi\" type fitting dispersions mean intensity. sfType, either \"ratio\", \"poscounts\", \"iterate\" type size factor estimation. recommend use \"poscounts\". betaPrior, whether put zero-mean normal prior non-intercept coefficients. modelMatrixType, either \"standard\" \"expanded\", describe model matrix, useT, logical, Wald statistics assumed follow standard Normal. minmu, lower bound estimated count fitting gene-wise dispersion. details, see DESeq2::DESeq().  users need set arguments (just use defaults). p_adjust method multiple test correction, default none, details see stats::p.adjust. pvalue_cutoff pvalue_cutoff numeric, p value cutoff, default 0.05. ... extra parameters passed DESeq2::DESeq().","code":""},{"path":"/reference/run_deseq2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform DESeq differential analysis — run_deseq2","text":"microbiomeMarker object.","code":""},{"path":"/reference/run_deseq2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform DESeq differential analysis — run_deseq2","text":"Note: DESeq2 requires input raw counts (un-normalized counts), counts values allow assessing measurement precision correctly. details see vignette DESeq2 (vignette(\"DESeq2\")). Thus, function supports \"none\", \"rarefy\", \"RLE\", \"CSS\", \"TMM\" normalization methods. strongly recommend using \"RLE\" method (default normalization method DESeq2 package). normalization methods used expert users comparisons among different normalization methods. two groups comparison, function utilizes Wald test (defined DESeq2::nbinomWaldTest()) hypothesis testing. Wald test statistic computed along probability (p-value) test statistic least extreme observed value selected random. contrasts used specify two groups compare. order names determines direction fold change reported. Likelihood ratio test (LRT) used identify genes significantly changed across different levels multiple groups comparisons. LRT identified significant features comparing full model reduced model. testing whether feature removed reduced model explains significant variation data. contrast must two length character NULL (default). required set manually two groups comparison multiple groups. order determines direction comparison, first element used specify reference group (control). means , first element denominator fold change, second element used baseline (numerator fold change). Otherwise, users required concern parameter (set default NULL), two groups, first level groups set reference group; multiple groups, perform ANOVA-like testing find markers difference groups.","code":""},{"path":"/reference/run_deseq2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform DESeq differential analysis — run_deseq2","text":"Love, Michael ., Wolfgang Huber, Simon Anders. \"Moderated estimation fold change dispersion RNA-seq data DESeq2.\" Genome biology 15.12 (2014): 1-21.","code":""},{"path":[]},{"path":"/reference/run_deseq2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform DESeq differential analysis — run_deseq2","text":"","code":"data(enterotypes_arumugam) ps <- phyloseq::subset_samples(     enterotypes_arumugam,     Enterotype %in% c(\"Enterotype 3\", \"Enterotype 2\")) %>%     phyloseq::subset_taxa(Phylum %in% c(\"Firmicutes\")) run_deseq2(ps, group = \"Enterotype\") #> Warning: Some counts are non-integers, they are rounded to integers. #> Raw count is recommended for reliable results for deseq2 method. #> converting counts to integer mode #> microbiomeMarker-class inherited from phyloseq-class #> normalization method:              [ RLE ] #> microbiome marker identity method: [ DESeq2: Wald ] #> marker_table() Marker Table:       [ 6 microbiome markers with 5 variables ] #> otu_table()    OTU Table:          [ 78 taxa and  24 samples ] #> sample_data()  Sample Data:        [ 24 samples by  10 sample variables ] #> tax_table()    Taxonomy Table:     [ 78 taxa by 1 taxonomic ranks ]"},{"path":"/reference/run_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the distance among samples — run_distance","title":"Calculate the distance among samples — run_distance","text":"function calculate distance among samples","code":""},{"path":"/reference/run_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the distance among samples — run_distance","text":"","code":"run_distance(                  object,                  method,                  alpha)"},{"path":"/reference/run_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the distance among samples — run_distance","text":"object (Required). phyloseq::phyloseq Biobase::ExpressionSet object. method (Required). character. Provide one currently supported options. See distanceMethodList detailed list supported options links accompanying documentation. Options include: \"unifrac\" : unweighted UniFrac distance. \"wunifrac\": weighted-UniFrac distance. \"GUniFrac\": variance-adjusted weighted UniFrac distances (default: alpha=0.5). \"bray\": bray crutis distance. \"dpcoa\": sample-wise distance used Double Principle Coordinate Analysis. \"jsd\": Jensen-Shannon Divergence. Alternatively, can provide character string defines custom distance method, form described designdist. alpha (Optional). numeric. parameter \"GUniFrac\" controlling weight abundant lineages (default: 0.5).","code":""},{"path":"/reference/run_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the distance among samples — run_distance","text":"distance object, applied ordination analysis.","code":""},{"path":"/reference/run_distance.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate the distance among samples — run_distance","text":"Created Hua Zou (5/14/2022 Shenzhen China)","code":""},{"path":"/reference/run_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the distance among samples — run_distance","text":"","code":"if (FALSE) { data(\"enterotypes_arumugam\") res <- run_distance(enterotypes_arumugam,                     method = \"bray\") }"},{"path":"/reference/run_edger.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform differential analysis using edgeR — run_edger","title":"Perform differential analysis using edgeR — run_edger","text":"Differential expression analysis based Negative Binomial distribution using edgeR.","code":""},{"path":"/reference/run_edger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform differential analysis using edgeR — run_edger","text":"","code":"run_edger(   ps,   group,   confounders = character(0),   contrast = NULL,   taxa_rank = \"all\",   method = c(\"LRT\", \"QLFT\"),   transform = c(\"identity\", \"log10\", \"log10p\"),   norm = \"TMM\",   norm_para = list(),   disp_para = list(),   p_adjust = c(\"none\", \"fdr\", \"bonferroni\", \"holm\", \"hochberg\", \"hommel\", \"BH\", \"BY\"),   pvalue_cutoff = 0.05,   ... )"},{"path":"/reference/run_edger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform differential analysis using edgeR — run_edger","text":"ps ps phyloseq::phyloseq object. group character, variable set group, must one var sample metadata. confounders character vector, confounding variables adjusted. default character(0), indicating confounding variable. contrast parameter used two groups comparison multiple groups. please see following details. taxa_rank character specify taxonomic rank perform differential analysis . one phyloseq::rank_names(phyloseq), \"\" means summarize taxa top taxa ranks (summarize_taxa(ps, level = rank_names(ps)[1])), \"none\" means perform differential analysis original taxa (taxa_names(phyloseq), e.g., OTU ASV). method character, used differential analysis, please see details info. transform character, methods used transform microbial abundance. See transform_abundances() details. options include: \"identity\", return original data without transformation (default). \"log10\", transformation log10(object), data contains zeros transformation log10(1 + object). \"log10p\", transformation log10(1 + object). norm methods used normalize microbial abundance data. See normalize() details. Options include: \"none\": normalize. \"rarefy\": random subsampling counts smallest library size data set. \"TSS\": total sum scaling, also referred \"relative abundance\", abundances normalized dividing corresponding sample library size. \"TMM\": trimmed mean m-values. First, sample chosen reference. scaling factor derived using weighted trimmed mean differences log-transformed gene-count fold-change sample reference. \"RLE\", relative log expression, RLE uses pseudo-reference calculated using geometric mean gene-specific abundances samples. scaling factors calculated median gene counts ratios samples reference. \"CSS\": cumulative sum scaling, calculates scaling factors cumulative sum gene abundances data-derived threshold. \"CLR\": centered log-ratio normalization. \"CPM\": pre-sample normalization sum values 1e+06. norm_para arguments passed specific normalization methods. users need pass additional arguments . disp_para additional arguments passed edgeR::estimateDisp() used dispersions estimation. users need pass additional arguments . p_adjust method multiple test correction, default none, details see stats::p.adjust. pvalue_cutoff numeric, p value cutoff, default 0.05 ... extra arguments passed model. See edgeR::glmQLFit() edgeR::glmFit() details.","code":""},{"path":"/reference/run_edger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform differential analysis using edgeR — run_edger","text":"microbiomeMarker object.","code":""},{"path":"/reference/run_edger.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform differential analysis using edgeR — run_edger","text":"Note edgeR designed work actual counts. means transformation required way inputting edgeR. two test methods differential analysis edgeR, likelihood ratio test (LRT) quasi-likelihood F-test (QLFT). QLFT method recommended allows stricter error rate control accounting uncertainty dispersion estimation. contrast must two length character NULL (default). required set manually two groups comparison multiple groups. order determines direction comparison, first element used specify reference group (control). means , first element denominator fold change, second element used baseline (numerator fold change). Otherwise, users required concern parameter (set default NULL), two groups, first level groups set reference group; multiple groups, perform ANOVA-like testing find markers difference groups.","code":""},{"path":"/reference/run_edger.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform differential analysis using edgeR — run_edger","text":"Robinson, Mark D., Alicia Oshlack. \"scaling normalization method differential expression analysis RNA-seq data.\" Genome biology 11.3 (2010): 1-9. Robinson, Mark D., Davis J. McCarthy, Gordon K. Smyth. \"edgeR: Bioconductor package differential expression analysis digital gene expression data.\" Bioinformatics 26.1 (2010): 139-140.","code":""},{"path":[]},{"path":"/reference/run_edger.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perform differential analysis using edgeR — run_edger","text":"Yang Cao","code":""},{"path":"/reference/run_edger.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform differential analysis using edgeR — run_edger","text":"","code":"data(enterotypes_arumugam) ps <- phyloseq::subset_samples(     enterotypes_arumugam,     Enterotype %in% c(\"Enterotype 3\", \"Enterotype 2\") ) run_edger(ps, group = \"Enterotype\") #> Warning: Some counts are non-integers, they are rounded to integers. #> Raw count is recommended for reliable results for edger method. #> microbiomeMarker-class inherited from phyloseq-class #> normalization method:              [ TMM ] #> microbiome marker identity method: [ edgeR: LRT ] #> marker_table() Marker Table:       [ 34 microbiome markers with 5 variables ] #> otu_table()    OTU Table:          [ 235 taxa and  24 samples ] #> sample_data()  Sample Data:        [ 24 samples by  10 sample variables ] #> tax_table()    Taxonomy Table:     [ 235 taxa by 1 taxonomic ranks ]"},{"path":"/reference/run_group.CI.html","id":null,"dir":"Reference","previous_headings":"","what":"Group Confidence Interval — run_group.CI","title":"Group Confidence Interval — run_group.CI","text":"Calculates confidence interval grouped data","code":""},{"path":"/reference/run_group.CI.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group Confidence Interval — run_group.CI","text":"","code":"run_group.CI(x, data, ci = 0.95)"},{"path":"/reference/run_group.CI.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group Confidence Interval — run_group.CI","text":"x (Required). aggregate compatible formula. data (Required). data frame (list) variables formula taken. ci (optional). numeric. confidence interval calculated.","code":""},{"path":"/reference/run_group.CI.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group Confidence Interval — run_group.CI","text":"data frame consisting one column grouping factor plus three columns upper bound, mean lower bound confidence interval level grouping factor","code":""},{"path":"/reference/run_group.CI.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Group Confidence Interval — run_group.CI","text":"https://github.com/cran/Rmisc/","code":""},{"path":"/reference/run_group.CI.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Group Confidence Interval — run_group.CI","text":"Created Hua Zou (5/19/2022 Shenzhen China)","code":""},{"path":"/reference/run_group.CI.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group Confidence Interval — run_group.CI","text":"","code":"run_group.CI(Sepal.Length~Species, iris, 0.95) #>      Species Sepal.Length.upper Sepal.Length.mean Sepal.Length.lower #> 1     setosa           5.106176             5.006           4.905824 #> 2 versicolor           6.082694             5.936           5.789306 #> 3  virginica           6.768715             6.588           6.407285"},{"path":"/reference/run_group.STDERR.html","id":null,"dir":"Reference","previous_headings":"","what":"Group Standard Error Interval — run_group.STDERR","title":"Group Standard Error Interval — run_group.STDERR","text":"Calculates standard error interval grouped data.","code":""},{"path":"/reference/run_group.STDERR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group Standard Error Interval — run_group.STDERR","text":"","code":"run_group.STDERR(x, data)"},{"path":"/reference/run_group.STDERR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group Standard Error Interval — run_group.STDERR","text":"x (Required). aggregate compatible formula. data (Required). data frame (list) variables formula taken.","code":""},{"path":"/reference/run_group.STDERR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group Standard Error Interval — run_group.STDERR","text":"data frame consisting one column grouping factor plus three columns upper bound, mean lower bound standard error interval level grouping factor.","code":""},{"path":"/reference/run_group.STDERR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Group Standard Error Interval — run_group.STDERR","text":"https://github.com/cran/Rmisc/","code":""},{"path":"/reference/run_group.STDERR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Group Standard Error Interval — run_group.STDERR","text":"Created Hua Zou (5/19/2022 Shenzhen China)","code":""},{"path":"/reference/run_group.STDERR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group Standard Error Interval — run_group.STDERR","text":"","code":"run_group.STDERR(Sepal.Length~Species, iris) #>      Species Sepal.Length.upper Sepal.Length.mean Sepal.Length.lower #> 1     setosa           5.055850             5.006           4.956150 #> 2 versicolor           6.008998             5.936           5.863002 #> 3  virginica           6.677927             6.588           6.498073"},{"path":"/reference/run_lefse.html","id":null,"dir":"Reference","previous_headings":"","what":"Liner discriminant analysis (LDA) effect size (LEFSe) analysis — run_lefse","title":"Liner discriminant analysis (LDA) effect size (LEFSe) analysis — run_lefse","text":"Perform Metagenomic LEFSe analysis based phyloseq object.","code":""},{"path":"/reference/run_lefse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Liner discriminant analysis (LDA) effect size (LEFSe) analysis — run_lefse","text":"","code":"run_lefse(   ps,   group,   subgroup = NULL,   taxa_rank = \"all\",   transform = c(\"identity\", \"log10\", \"log10p\"),   norm = \"CPM\",   norm_para = list(),   kw_cutoff = 0.05,   lda_cutoff = 2,   bootstrap_n = 30,   bootstrap_fraction = 2/3,   wilcoxon_cutoff = 0.05,   multigrp_strat = FALSE,   strict = c(\"0\", \"1\", \"2\"),   sample_min = 10,   only_same_subgrp = FALSE,   curv = FALSE )"},{"path":"/reference/run_lefse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Liner discriminant analysis (LDA) effect size (LEFSe) analysis — run_lefse","text":"ps phyloseq-class object group character, column name set group subgroup character, column name set subgroup taxa_rank character specify taxonomic rank perform differential analysis . one phyloseq::rank_names(phyloseq), \"\" means summarize taxa top taxa ranks (summarize_taxa(ps, level = rank_names(ps)[1])), \"none\" means perform differential analysis original taxa (taxa_names(phyloseq), e.g., OTU ASV). transform character, methods used transform microbial abundance. See transform_abundances() details. options include: \"identity\", return original data without transformation (default). \"log10\", transformation log10(object), data contains zeros transformation log10(1 + object). \"log10p\", transformation log10(1 + object). norm methods used normalize microbial abundance data. See normalize() details. Options include: \"none\": normalize. \"rarefy\": random subsampling counts smallest library size data set. \"TSS\": total sum scaling, also referred \"relative abundance\", abundances normalized dividing corresponding sample library size. \"TMM\": trimmed mean m-values. First, sample chosen reference. scaling factor derived using weighted trimmed mean differences log-transformed gene-count fold-change sample reference. \"RLE\", relative log expression, RLE uses pseudo-reference calculated using geometric mean gene-specific abundances samples. scaling factors calculated median gene counts ratios samples reference. \"CSS\": cumulative sum scaling, calculates scaling factors cumulative sum gene abundances data-derived threshold. \"CLR\": centered log-ratio normalization. \"CPM\": pre-sample normalization sum values 1e+06. norm_para named list. arguments passed specific normalization methods.  users need pass additional arguments . kw_cutoff numeric, p value cutoff kw test, default 0.05 lda_cutoff numeric, lda score cutoff, default 2 bootstrap_n integer, number bootstrap iteration LDA, default 30 bootstrap_fraction numeric, subsampling fraction value bootstrap iteration, default 2/3 wilcoxon_cutoff numeric, p value cutoff wilcoxon test, default 0.05 multigrp_strat logical, multiple group tasks, whether test performed one-one (strict) one-setting, default FALSE. strict multiple testing options, 0 correction (default), 1 independent comparisons, 2 independent comparison. sample_min integer, minimum number samples per subclass performing wilcoxon test, default 10 only_same_subgrp logical, whether perform wilcoxon test among subgroups name, default FALSE curv logical, whether perform wilcoxon test using Curtis's approach, defalt FALSE","code":""},{"path":"/reference/run_lefse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Liner discriminant analysis (LDA) effect size (LEFSe) analysis — run_lefse","text":"microbiomeMarker object, slot marker_tablecontains four variables: feature, significantly different features. enrich_group, class differential features enriched. lda, logarithmic LDA score (effect size) pvalue, p value kw test.","code":""},{"path":"/reference/run_lefse.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Liner discriminant analysis (LDA) effect size (LEFSe) analysis — run_lefse","text":"Segata, Nicola, et al. Metagenomic biomarker discovery explanation. Genome biology 12.6 (2011): R60.","code":""},{"path":[]},{"path":"/reference/run_lefse.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Liner discriminant analysis (LDA) effect size (LEFSe) analysis — run_lefse","text":"Yang Cao","code":""},{"path":"/reference/run_lefse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Liner discriminant analysis (LDA) effect size (LEFSe) analysis — run_lefse","text":"","code":"data(kostic_crc) kostic_crc_small <- phyloseq::subset_taxa(     kostic_crc,     Phylum == \"Firmicutes\" ) mm_lefse <- run_lefse(     kostic_crc_small,     wilcoxon_cutoff = 0.01,     group = \"DIAGNOSIS\",     kw_cutoff = 0.01,     multigrp_strat = TRUE,     lda_cutoff = 4 )"},{"path":"/reference/run_limma_voom.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential analysis using limma-voom — run_limma_voom","title":"Differential analysis using limma-voom — run_limma_voom","text":"Differential analysis using limma-voom","code":""},{"path":"/reference/run_limma_voom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential analysis using limma-voom — run_limma_voom","text":"","code":"run_limma_voom(   ps,   group,   confounders = character(0),   contrast = NULL,   taxa_rank = \"all\",   transform = c(\"identity\", \"log10\", \"log10p\"),   norm = \"none\",   norm_para = list(),   voom_span = 0.5,   p_adjust = c(\"none\", \"fdr\", \"bonferroni\", \"holm\", \"hochberg\", \"hommel\", \"BH\", \"BY\"),   pvalue_cutoff = 0.05,   ... )"},{"path":"/reference/run_limma_voom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential analysis using limma-voom — run_limma_voom","text":"ps ps phyloseq::phyloseq object. group character, variable set group, must one var sample metadata. confounders character vector, confounding variables adjusted. default character(0), indicating confounding variable. contrast parameter used two groups comparison multiple groups. please see following details. taxa_rank character specify taxonomic rank perform differential analysis . one phyloseq::rank_names(phyloseq), \"\" means summarize taxa top taxa ranks (summarize_taxa(ps, level = rank_names(ps)[1])), \"none\" means perform differential analysis original taxa (taxa_names(phyloseq), e.g., OTU ASV). transform character, methods used transform microbial abundance. See transform_abundances() details. options include: \"identity\", return original data without transformation (default). \"log10\", transformation log10(object), data contains zeros transformation log10(1 + object). \"log10p\", transformation log10(1 + object). norm methods used normalize microbial abundance data. See normalize() details. Options include: \"none\": normalize. \"rarefy\": random subsampling counts smallest library size data set. \"TMM\": trimmed mean m-values. First, sample chosen reference. scaling factor derived using weighted trimmed mean differences log-transformed gene-count fold-change sample reference. \"RLE\", relative log expression, RLE uses pseudo-reference calculated using geometric mean gene-specific abundances samples. scaling factors calculated median gene counts ratios samples reference. \"CSS\": cumulative sum scaling, calculates scaling factors cumulative sum gene abundances data-derived threshold. norm_para arguments passed specific normalization methods. users need pass additional arguments . voom_span width smoothing window used lowess mean-variance trend limma::voom(). Expressed proportion 0 1. p_adjust method multiple test correction, default none, details see stats::p.adjust. pvalue_cutoff cutoff p value, default 0.05. ... extra arguments passed limma::eBayes().","code":""},{"path":"/reference/run_limma_voom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential analysis using limma-voom — run_limma_voom","text":"microbiomeMarker object.","code":""},{"path":"/reference/run_limma_voom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential analysis using limma-voom — run_limma_voom","text":"contrast must two length character NULL (default). required set manually two groups comparison multiple groups. order determines direction comparison, first element used specify reference group (control). means , first element denominator fold change, second element used baseline (numerator fold change). Otherwise, users required concern parameter (set default NULL), two groups, first level groups set reference group; multiple groups, perform ANOVA-like testing find markers difference groups.","code":""},{"path":"/reference/run_limma_voom.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Differential analysis using limma-voom — run_limma_voom","text":"Law, C. W., Chen, Y., Shi, W., & Smyth, G. K. (2014). voom: Precision weights unlock linear model analysis tools RNA-seq read counts. Genome biology, 15(2), 1-17.","code":""},{"path":"/reference/run_limma_voom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential analysis using limma-voom — run_limma_voom","text":"","code":"data(enterotypes_arumugam) mm <- run_limma_voom(     enterotypes_arumugam,     \"Enterotype\",     contrast = c(\"Enterotype 3\", \"Enterotype 2\"),     pvalue_cutoff = 0.01,     p_adjust = \"none\" ) mm #> microbiomeMarker-class inherited from phyloseq-class #> normalization method:              [ none ] #> microbiome marker identity method: [ limma_voom ] #> marker_table() Marker Table:       [ 14 microbiome markers with 5 variables ] #> otu_table()    OTU Table:          [ 244 taxa and  39 samples ] #> sample_data()  Sample Data:        [ 39 samples by  9 sample variables ] #> tax_table()    Taxonomy Table:     [ 244 taxa by 1 taxonomic ranks ]"},{"path":"/reference/run_marker.html","id":null,"dir":"Reference","previous_headings":"","what":"Find makers (differentially expressed metagenomic features) — run_marker","title":"Find makers (differentially expressed metagenomic features) — run_marker","text":"run_marker wrapper differential analysis functions.","code":""},{"path":"/reference/run_marker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find makers (differentially expressed metagenomic features) — run_marker","text":"","code":"run_marker(   ps,   group,   da_method = c(\"lefse\", \"simple_t\", \"simple_welch\", \"simple_white\", \"simple_kruskal\",     \"simple_anova\", \"edger\", \"deseq2\", \"metagenomeseq\", \"ancom\", \"ancombc\", \"aldex\",     \"limma_voom\", \"sl_lr\", \"sl_rf\", \"sl_svm\"),   taxa_rank = \"all\",   transform = c(\"identity\", \"log10\", \"log10p\"),   norm = \"none\",   norm_para = list(),   p_adjust = c(\"none\", \"fdr\", \"bonferroni\", \"holm\", \"hochberg\", \"hommel\", \"BH\", \"BY\"),   pvalue_cutoff = 0.05,   ... )"},{"path":"/reference/run_marker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find makers (differentially expressed metagenomic features) — run_marker","text":"ps phyloseq::phyloseq object group character, variable set group da_method character specify differential analysis method. options include: \"lefse\", linear discriminant analysis (LDA) effect size (LEfSe) method, details see run_lefse(). \"simple_t\", \"simple_welch\", \"simple_white\", \"simple_kruskal\", \"simple_anova\", simple statistic methods; \"simple_t\", \"simple_welch\" \"simple_white\" two groups comparison; \"simple_kruskal\", \"simple_anova\" multiple groups comparison. details see run_simple_stat(). \"edger\", see run_edger(). \"deseq2\", see run_deseq2(). \"metagenomeseq\", differential expression analysis based Zero-inflated Log-Normal mixture model Zero-inflated Gaussian mixture model using metagenomeSeq, see run_metagenomeseq(). \"ancom\", see run_ancom(). \"ancombc\", differential analysis compositions microbiomes bias correction, see run_ancombc(). \"aldex\", see run_aldex(). \"limma_voom\", see run_limma_voom(). \"sl_lr\", \"sl_rf\", \"sl_svm\", supervised leaning (SL) methods: logistic regression (lr), random forest (rf), support vector machine (svm). details see run_sl(). taxa_rank character specify taxonomic rank perform differential analysis . one phyloseq::rank_names(phyloseq), \"\" means summarize taxa top taxa ranks (summarize_taxa(ps, level = rank_names(ps)[1])), \"none\" means perform differential analysis original taxa (taxa_names(phyloseq), e.g., OTU ASV). transform character, methods used transform microbial abundance. See transform_abundances() details. options include: \"identity\", return original data without transformation (default). \"log10\", transformation log10(object), data contains zeros transformation log10(1 + object). \"log10p\", transformation log10(1 + object). norm methods used normalize microbial abundance data. See normalize() details. Options include: \"none\": normalize. \"rarefy\": random subsampling counts smallest library size data set. \"TSS\": total sum scaling, also referred \"relative abundance\", abundances normalized dividing corresponding sample library size. \"TMM\": trimmed mean m-values. First, sample chosen reference. scaling factor derived using weighted trimmed mean differences log-transformed gene-count fold-change sample reference. \"RLE\", relative log expression, RLE uses pseudo-reference calculated using geometric mean gene-specific abundances samples. scaling factors calculated median gene counts ratios samples reference. \"CSS\": cumulative sum scaling, calculates scaling factors cumulative sum gene abundances data-derived threshold. \"CLR\": centered log-ratio normalization. \"CPM\": pre-sample normalization sum values 1e+06. norm_para arguments passed specific normalization methods p_adjust method multiple test correction, default none, details see stats::p.adjust. pvalue_cutoff numeric, p value cutoff, default 0.05. ... extra arguments passed corresponding differential analysis functions, e.g. run_lefse().","code":""},{"path":"/reference/run_marker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find makers (differentially expressed metagenomic features) — run_marker","text":"microbiomeMarker object.","code":""},{"path":"/reference/run_marker.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find makers (differentially expressed metagenomic features) — run_marker","text":"function wrapper differential analysis functions, recommend use corresponding function, since better default arguments setting.","code":""},{"path":[]},{"path":"/reference/run_metagenomeseq.html","id":null,"dir":"Reference","previous_headings":"","what":"metagenomeSeq differential analysis — run_metagenomeseq","title":"metagenomeSeq differential analysis — run_metagenomeseq","text":"Differential expression analysis based Zero-inflated Log-Normal mixture model Zero-inflated Gaussian mixture model using metagenomeSeq.","code":""},{"path":"/reference/run_metagenomeseq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"metagenomeSeq differential analysis — run_metagenomeseq","text":"","code":"run_metagenomeseq(   ps,   group,   confounders = character(0),   contrast = NULL,   taxa_rank = \"all\",   transform = c(\"identity\", \"log10\", \"log10p\"),   norm = \"CSS\",   norm_para = list(),   method = c(\"ZILN\", \"ZIG\"),   p_adjust = c(\"none\", \"fdr\", \"bonferroni\", \"holm\", \"hochberg\", \"hommel\", \"BH\", \"BY\"),   pvalue_cutoff = 0.05,   ... )"},{"path":"/reference/run_metagenomeseq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"metagenomeSeq differential analysis — run_metagenomeseq","text":"ps ps phyloseq::phyloseq object. group character, variable set group, must one var sample metadata. confounders character vector, confounding variables adjusted. default character(0), indicating confounding variable. contrast parameter used two groups comparison multiple groups. please see following details. taxa_rank character specify taxonomic rank perform differential analysis . one phyloseq::rank_names(ps), \"\" means summarize taxa top taxa ranks (summarize_taxa(ps, level = rank_names(ps)[1])), \"none\" means perform differential analysis original taxa (taxa_names(ps), e.g., OTU ASV). transform character, methods used transform microbial abundance. See transform_abundances() details. options include: \"identity\", return original data without transformation (default). \"log10\", transformation log10(object), data contains zeros transformation log10(1 + object). \"log10p\", transformation log10(1 + object). norm methods used normalize microbial abundance data. See normalize() details. Options include: \"none\": normalize. \"rarefy\": random subsampling counts smallest library size data set. \"TSS\": total sum scaling, also referred \"relative abundance\", abundances normalized dividing corresponding sample library size. \"TMM\": trimmed mean m-values. First, sample chosen reference. scaling factor derived using weighted trimmed mean differences log-transformed gene-count fold-change sample reference. \"RLE\", relative log expression, RLE uses pseudo-reference calculated using geometric mean gene-specific abundances samples. scaling factors calculated median gene counts ratios samples reference. \"CSS\": cumulative sum scaling, calculates scaling factors cumulative sum gene abundances data-derived threshold. \"CLR\": centered log-ratio normalization. \"CPM\": pre-sample normalization sum values 1e+06. norm_para arguments passed specific normalization methods. method character, model used differential analysis, \"ZILN\" (Zero-inflated Log-Normal mixture model)\" \"ZIG\" (Zero-inflated Gaussian mixture model). zero-inflated log-normal model preferred due high sensitivity low FDR. p_adjust method multiple test correction, default none, details see stats::p.adjust. pvalue_cutoff numeric, p value cutoff, default 0.05 ... extra arguments passed model. details see metagenomeSeq::fitFeatureModel() metagenomeSeq::fitZig(), e.g. control (can setted using metagenomeSeq::zigControl()) metagenomeSeq::fitZig().","code":""},{"path":"/reference/run_metagenomeseq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"metagenomeSeq differential analysis — run_metagenomeseq","text":"microbiomeMarker object.","code":""},{"path":"/reference/run_metagenomeseq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"metagenomeSeq differential analysis — run_metagenomeseq","text":"metagnomeSeq provides two differential analysis methods, zero-inflated log-normal mixture model (implemented metagenomeSeq::fitFeatureModel()) zero-inflated Gaussian mixture model (implemented metagenomeSeq::fitZig()). recommend fitFeatureModel fitZig due high sensitivity low FDR. metagenomeSeq::fitFeatureModel() metagenomeSeq::fitZig() require abundance profiles normalization. metagenomeSeq::fitZig(), output column coefficient interest, logFC column output metagenomeSeq::fitFeatureModel() analogous coefficient. Thus, logFC really just estimate coefficient interest metagenomeSeq::fitFeatureModel(). details see question Difference fitFeatureModel fitZIG metagenomeSeq. contrast must two length character NULL (default). required set manually two groups comparison multiple groups. order determines direction comparison, first element used specify reference group (control). means , first element denominator fold change, second element used baseline (numerator fold change). Otherwise, users required concern paramerter (set default NULL), two groups, first level groups set reference group; multiple groups, perform ANOVA-like testing find markers difference groups. note, metagenomeSeq::fitFeatureModel() allows multiple groups comparison.","code":""},{"path":"/reference/run_metagenomeseq.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"metagenomeSeq differential analysis — run_metagenomeseq","text":"Paulson, Joseph N., et al. \"Differential abundance analysis microbial marker-gene surveys.\" Nature methods 10.12 (2013): 1200-1202.","code":""},{"path":"/reference/run_metagenomeseq.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"metagenomeSeq differential analysis — run_metagenomeseq","text":"Yang Cao","code":""},{"path":"/reference/run_metagenomeseq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"metagenomeSeq differential analysis — run_metagenomeseq","text":"","code":"data(enterotypes_arumugam) ps <- phyloseq::subset_samples(     enterotypes_arumugam,     Enterotype %in% c(\"Enterotype 3\", \"Enterotype 2\") ) run_metagenomeseq(ps, group = \"Enterotype\") #> Default value being used. #> Warning: Partial NA coefficients for 91 probe(s) #> Warning: glm.fit: algorithm did not converge #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: algorithm did not converge #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: algorithm did not converge #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: algorithm did not converge #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: algorithm did not converge #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: algorithm did not converge #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: algorithm did not converge #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: algorithm did not converge #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: algorithm did not converge #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: algorithm did not converge #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> Warning: glm.fit: algorithm did not converge #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred #> microbiomeMarker-class inherited from phyloseq-class #> normalization method:              [ CSS ] #> microbiome marker identity method: [ metagenomeSeq: ZILN ] #> marker_table() Marker Table:       [ 16 microbiome markers with 5 variables ] #> otu_table()    OTU Table:          [ 235 taxa and  24 samples ] #> sample_data()  Sample Data:        [ 24 samples by  10 sample variables ] #> tax_table()    Taxonomy Table:     [ 235 taxa by 1 taxonomic ranks ]"},{"path":"/reference/run_simple_stat.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple statistical analysis of metagenomic profiles — run_simple_stat","title":"Simple statistical analysis of metagenomic profiles — run_simple_stat","text":"Perform simple statistical analysis metagenomic profiles. function wrapper run_test_two_groups run_test_multiple_groups.","code":""},{"path":"/reference/run_simple_stat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple statistical analysis of metagenomic profiles — run_simple_stat","text":"","code":"run_simple_stat(   ps,   group,   taxa_rank = \"all\",   transform = c(\"identity\", \"log10\", \"log10p\"),   norm = \"TSS\",   norm_para = list(),   method = c(\"welch.test\", \"t.test\", \"white.test\", \"anova\", \"kruskal\"),   p_adjust = c(\"none\", \"fdr\", \"bonferroni\", \"holm\", \"hochberg\", \"hommel\", \"BH\", \"BY\"),   pvalue_cutoff = 0.05,   diff_mean_cutoff = NULL,   ratio_cutoff = NULL,   eta_squared_cutoff = NULL,   conf_level = 0.95,   nperm = 1000,   ... )"},{"path":"/reference/run_simple_stat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple statistical analysis of metagenomic profiles — run_simple_stat","text":"ps phyloseq::phyloseq object group character, variable set group taxa_rank character specify taxonomic rank perform differential analysis . one phyloseq::rank_names(phyloseq), \"\" means summarize taxa top taxa ranks (summarize_taxa(ps, level = rank_names(ps)[1])), \"none\" means perform differential analysis original taxa (taxa_names(phyloseq), e.g., OTU ASV). transform character, methods used transform microbial abundance. See transform_abundances() details. options include: \"identity\", return original data without transformation (default). \"log10\", transformation log10(object), data contains zeros transformation log10(1 + object). \"log10p\", transformation log10(1 + object). norm methods used normalize microbial abundance data. See normalize() details. Options include: \"none\": normalize. \"rarefy\": random subsampling counts smallest library size data set. \"TSS\": total sum scaling, also referred \"relative abundance\", abundances normalized dividing corresponding sample library size. \"TMM\": trimmed mean m-values. First, sample chosen reference. scaling factor derived using weighted trimmed mean differences log-transformed gene-count fold-change sample reference. \"RLE\", relative log expression, RLE uses pseudo-reference calculated using geometric mean gene-specific abundances samples. scaling factors calculated median gene counts ratios samples reference. \"CSS\": cumulative sum scaling, calculates scaling factors cumulative sum gene abundances data-derived threshold. \"CLR\": centered log-ratio normalization. \"CPM\": pre-sample normalization sum values 1e+06. norm_para arguments passed specific normalization methods method test method, options include: \"welch.test\", \"t.test\" \"white.test\" two groups comparison,  \"anova\"\"kruskal\" multiple groups comparison. p_adjust method multiple test correction, default none, details see stats::p.adjust. pvalue_cutoff numeric, p value cutoff, default 0.05 diff_mean_cutoff, ratio_cutoff used two groups comparison, cutoff different means ratios, default NULL means effect size filter. eta_squared_cutoff used multiple groups comparison, numeric, cutoff effect size (eta squared) default NULL means effect size filter. conf_level used two groups comparison, numeric, confidence level interval. nperm integer, used two groups comparison, number permutations white non parametric t test estimation ... used two groups comparison, extra arguments passed t.test() fisher.test().","code":""},{"path":"/reference/run_simple_stat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple statistical analysis of metagenomic profiles — run_simple_stat","text":"microbiomeMarker object.","code":""},{"path":[]},{"path":"/reference/run_simple_stat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple statistical analysis of metagenomic profiles — run_simple_stat","text":"","code":"data(enterotypes_arumugam) ps <- phyloseq::subset_samples(     enterotypes_arumugam,     Enterotype %in% c(\"Enterotype 3\", \"Enterotype 2\") ) run_simple_stat(ps, group = \"Enterotype\") #> microbiomeMarker-class inherited from phyloseq-class #> normalization method:              [ TSS ] #> microbiome marker identity method: [ welch.test ] #> marker_table() Marker Table:       [ 16 microbiome markers with 5 variables ] #> otu_table()    OTU Table:          [ 235 taxa and  24 samples ] #> sample_data()  Sample Data:        [ 24 samples by  9 sample variables ] #> tax_table()    Taxonomy Table:     [ 235 taxa by 1 taxonomic ranks ]"},{"path":"/reference/run_sl.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify biomarkers using supervised leaning (SL) methods — run_sl","title":"Identify biomarkers using supervised leaning (SL) methods — run_sl","text":"Identify biomarkers using logistic regression, random forest, support vector machine.","code":""},{"path":"/reference/run_sl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify biomarkers using supervised leaning (SL) methods — run_sl","text":"","code":"run_sl(   ps,   group,   taxa_rank = \"all\",   transform = c(\"identity\", \"log10\", \"log10p\"),   norm = \"none\",   norm_para = list(),   nfolds = 3,   nrepeats = 3,   sampling = NULL,   tune_length = 5,   top_n = 10,   method = c(\"LR\", \"RF\", \"SVM\"),   ... )"},{"path":"/reference/run_sl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify biomarkers using supervised leaning (SL) methods — run_sl","text":"ps phyloseq-class object. group character, variable set group. taxa_rank character specify taxonomic rank perform differential analysis . one phyloseq::rank_names(phyloseq), \"\" means summarize taxa top taxa ranks (summarize_taxa(ps, level = rank_names(ps)[1])), \"none\" means perform differential analysis original taxa (taxa_names(phyloseq), e.g., OTU ASV). transform character, methods used transform microbial abundance. See transform_abundances() details. options include: \"identity\", return original data without transformation (default). \"log10\", transformation log10(object), data contains zeros transformation log10(1 + object). \"log10p\", transformation log10(1 + object). norm methods used normalize microbial abundance data. See normalize() details. Options include: \"none\": normalize. \"rarefy\": random subsampling counts smallest library size data set. \"TSS\": total sum scaling, also referred \"relative abundance\", abundances normalized dividing corresponding sample library size. \"TMM\": trimmed mean m-values. First, sample chosen reference. scaling factor derived using weighted trimmed mean differences log-transformed gene-count fold-change sample reference. \"RLE\", relative log expression, RLE uses pseudo-reference calculated using geometric mean gene-specific abundances samples. scaling factors calculated median gene counts ratios samples reference. \"CSS\": cumulative sum scaling, calculates scaling factors cumulative sum gene abundances data-derived threshold. \"CLR\": centered log-ratio normalization. \"CPM\": pre-sample normalization sum values 1e+06. norm_para named list. arguments passed specific normalization methods.  users need pass additional arguments . nfolds number splits CV. nrepeats number complete sets folds compute. sampling single character value describing type additional sampling conducted resampling (usually resolve class imbalances). Values \"none\", \"\", \"\", \"smote\", \"rose\". details see caret::trainControl(). tune_length integer denoting amount granularity tuning parameter grid. details see caret::train(). top_n integer denoting top n features biomarker according importance score. method supervised learning method, options \"LR\" (logistic regression), \"RF\" (rando forest), \"SVM\" (support vector machine). ... extra arguments passed classification. e.g., importance randomForest::randomForest.","code":""},{"path":"/reference/run_sl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify biomarkers using supervised leaning (SL) methods — run_sl","text":"microbiomeMarker object.","code":""},{"path":"/reference/run_sl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Identify biomarkers using supervised leaning (SL) methods — run_sl","text":"support two groups comparison current version. marker selected based importance score. Moreover, hyper-parameters selected automatically grid-search based method N-time K-fold cross-validation. Thus, identified biomarker based can biased due model overfitting small datasets (e.g., less 100 samples). argument top_n used denote number markers based importance score. rule principle select top_n, however, usually useful try different top_n compare performance marker predictions testing data.","code":""},{"path":[]},{"path":"/reference/run_sl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Identify biomarkers using supervised leaning (SL) methods — run_sl","text":"Yang Cao","code":""},{"path":"/reference/run_sl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify biomarkers using supervised leaning (SL) methods — run_sl","text":"","code":"data(enterotypes_arumugam) # small example phyloseq object for test ps_small <- phyloseq::subset_taxa(     enterotypes_arumugam,     Phylum %in% c(\"Firmicutes\", \"Bacteroidetes\") )  set.seed(2021) mm <- run_sl(     ps_small,     group = \"Gender\",     taxa_rank = \"Genus\",     nfolds = 2,     nrepeats = 1,     top_n = 15,     norm = \"TSS\",     method = \"LR\" ) #> Loading required package: ggplot2 #> Loading required package: lattice mm #> microbiomeMarker-class inherited from phyloseq-class #> normalization method:              [ TSS ] #> microbiome marker identity method: [ logistic regression ] #> marker_table() Marker Table:       [ 15 microbiome markers with 3 variables ] #> otu_table()    OTU Table:          [ 91 taxa and  39 samples ] #> sample_data()  Sample Data:        [ 39 samples by  9 sample variables ] #> tax_table()    Taxonomy Table:     [ 91 taxa by 1 taxonomic ranks ]"},{"path":"/reference/run_summarySE.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizes data — run_summarySE","title":"Summarizes data — run_summarySE","text":"Gives count, mean, standard deviation, standard error mean, confidence interval (default 95%).","code":""},{"path":"/reference/run_summarySE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizes data — run_summarySE","text":"","code":"run_summarySE(   data,   measurevar,   groupvars = NULL,   na.rm = FALSE,   conf.interval = 0.95,   .drop = TRUE )"},{"path":"/reference/run_summarySE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizes data — run_summarySE","text":"data (Required). data frame. measurevar (Required). character. name column contains variable summariezed. groupvars (Required). vector. vector containing names columns contain grouping variables. na.rm (Required). logical. boolean indicates whether ignore NA's (default: FALSE). conf.interval (Required). numeric. percent range confidence interval (default: 0.95). .drop (Required). logical. combinations variables appear input data preserved (FALSE) dropped (default: TRUE).","code":""},{"path":"/reference/run_summarySE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarizes data — run_summarySE","text":"data frame count, mean, standard deviation, standard error mean, confidence interval (default 95%).","code":""},{"path":"/reference/run_summarySE.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Summarizes data — run_summarySE","text":"https://github.com/cran/Rmisc/","code":""},{"path":"/reference/run_summarySE.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarizes data — run_summarySE","text":"Created Hua Zou (5/19/2022 Shenzhen China)","code":""},{"path":"/reference/run_summarySE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarizes data — run_summarySE","text":"","code":"if (FALSE) { library(dose) run_summarySE(ToothGrowth, measurevar=\"len\", groupvars=c(\"supp\", \"dose\")) }"},{"path":"/reference/run_test_multiple_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Statistical test for multiple groups — run_test_multiple_groups","title":"Statistical test for multiple groups — run_test_multiple_groups","text":"Statistical test multiple groups","code":""},{"path":"/reference/run_test_multiple_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Statistical test for multiple groups — run_test_multiple_groups","text":"","code":"run_test_multiple_groups(   ps,   group,   taxa_rank = \"all\",   transform = c(\"identity\", \"log10\", \"log10p\"),   norm = \"TSS\",   norm_para = list(),   method = c(\"anova\", \"kruskal\"),   p_adjust = c(\"none\", \"fdr\", \"bonferroni\", \"holm\", \"hochberg\", \"hommel\", \"BH\", \"BY\"),   pvalue_cutoff = 0.05,   effect_size_cutoff = NULL )"},{"path":"/reference/run_test_multiple_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Statistical test for multiple groups — run_test_multiple_groups","text":"ps phyloseq::phyloseq object group character, variable set group taxa_rank character specify taxonomic rank perform differential analysis . one phyloseq::rank_names(phyloseq), \"\" means summarize taxa top taxa ranks (summarize_taxa(ps, level = rank_names(ps)[1])), \"none\" means perform differential analysis original taxa (taxa_names(phyloseq), e.g., OTU ASV). transform character, methods used transform microbial abundance. See transform_abundances() details. options include: \"identity\", return original data without transformation (default). \"log10\", transformation log10(object), data contains zeros transformation log10(1 + object). \"log10p\", transformation log10(1 + object). norm methods used normalize microbial abundance data. See normalize() details. Options include: \"none\": normalize. \"rarefy\": random subsampling counts smallest library size data set. \"TSS\": total sum scaling, also referred \"relative abundance\", abundances normalized dividing corresponding sample library size. \"TMM\": trimmed mean m-values. First, sample chosen reference. scaling factor derived using weighted trimmed mean differences log-transformed gene-count fold-change sample reference. \"RLE\", relative log expression, RLE uses pseudo-reference calculated using geometric mean gene-specific abundances samples. scaling factors calculated median gene counts ratios samples reference. \"CSS\": cumulative sum scaling, calculates scaling factors cumulative sum gene abundances data-derived threshold. \"CLR\": centered log-ratio normalization. \"CPM\": pre-sample normalization sum values 1e+06. norm_para arguments passed specific normalization methods method test method, must one \"anova\" \"kruskal\" p_adjust method multiple test correction, default none, details see stats::p.adjust. pvalue_cutoff numeric, p value cutoff, default 0.05. effect_size_cutoff numeric, cutoff effect size default NULL means effect size filter. eta squared used measure effect size anova/kruskal test.","code":""},{"path":"/reference/run_test_multiple_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Statistical test for multiple groups — run_test_multiple_groups","text":"microbiomeMarker object.","code":""},{"path":[]},{"path":"/reference/run_test_multiple_groups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Statistical test for multiple groups — run_test_multiple_groups","text":"","code":"data(enterotypes_arumugam) ps <- phyloseq::subset_samples(     enterotypes_arumugam,     Enterotype %in% c(\"Enterotype 3\", \"Enterotype 2\", \"Enterotype 1\") ) mm_anova <- run_test_multiple_groups(     ps,     group = \"Enterotype\",     method = \"anova\" )"},{"path":"/reference/run_test_two_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Statistical test between two groups — run_test_two_groups","title":"Statistical test between two groups — run_test_two_groups","text":"Statistical test two groups","code":""},{"path":"/reference/run_test_two_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Statistical test between two groups — run_test_two_groups","text":"","code":"run_test_two_groups(   ps,   group,   taxa_rank = \"all\",   transform = c(\"identity\", \"log10\", \"log10p\"),   norm = \"TSS\",   norm_para = list(),   method = c(\"welch.test\", \"t.test\", \"white.test\"),   p_adjust = c(\"none\", \"fdr\", \"bonferroni\", \"holm\", \"hochberg\", \"hommel\", \"BH\", \"BY\"),   pvalue_cutoff = 0.05,   diff_mean_cutoff = NULL,   ratio_cutoff = NULL,   conf_level = 0.95,   nperm = 1000,   ... )"},{"path":"/reference/run_test_two_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Statistical test between two groups — run_test_two_groups","text":"ps phyloseq::phyloseq object group character, variable set group taxa_rank character specify taxonomic rank perform differential analysis . one phyloseq::rank_names(phyloseq), \"\" means summarize taxa top taxa ranks (summarize_taxa(ps, level = rank_names(ps)[1])), \"none\" means perform differential analysis original taxa (taxa_names(phyloseq), e.g., OTU ASV). transform character, methods used transform microbial abundance. See transform_abundances() details. options include: \"identity\", return original data without transformation (default). \"log10\", transformation log10(object), data contains zeros transformation log10(1 + object). \"log10p\", transformation log10(1 + object). norm methods used normalize microbial abundance data. See normalize() details. Options include: \"none\": normalize. \"rarefy\": random subsampling counts smallest library size data set. \"TSS\": total sum scaling, also referred \"relative abundance\", abundances normalized dividing corresponding sample library size. \"TMM\": trimmed mean m-values. First, sample chosen reference. scaling factor derived using weighted trimmed mean differences log-transformed gene-count fold-change sample reference. \"RLE\", relative log expression, RLE uses pseudo-reference calculated using geometric mean gene-specific abundances samples. scaling factors calculated median gene counts ratios samples reference. \"CSS\": cumulative sum scaling, calculates scaling factors cumulative sum gene abundances data-derived threshold. \"CLR\": centered log-ratio normalization. \"CPM\": pre-sample normalization sum values 1e+06. norm_para arguments passed specific normalization methods method test method, must one \"welch.test\", \"t.test\" \"white.test\" p_adjust method multiple test correction, default none, details see stats::p.adjust. pvalue_cutoff numeric, p value cutoff, default 0.05 diff_mean_cutoff, ratio_cutoff cutoff different means ratios, default NULL means effect size filter. conf_level numeric, confidence level interval. nperm integer, number permutations white non parametric t test estimation ... extra arguments passed t.test() fisher.test()","code":""},{"path":"/reference/run_test_two_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Statistical test between two groups — run_test_two_groups","text":"microbiomeMarker object.","code":""},{"path":[]},{"path":"/reference/run_test_two_groups.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Statistical test between two groups — run_test_two_groups","text":"Yang Cao","code":""},{"path":"/reference/run_test_two_groups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Statistical test between two groups — run_test_two_groups","text":"","code":"data(enterotypes_arumugam) mm_welch <- run_test_two_groups(     enterotypes_arumugam,     group = \"Gender\",     method = \"welch.test\" ) mm_welch #> microbiomeMarker-class inherited from phyloseq-class #> normalization method:              [ TSS ] #> microbiome marker identity method: [ welch.test ] #> marker_table() Marker Table:       [ 3 microbiome markers with 5 variables ] #> otu_table()    OTU Table:          [ 244 taxa and  39 samples ] #> sample_data()  Sample Data:        [ 39 samples by  9 sample variables ] #> tax_table()    Taxonomy Table:     [ 244 taxa by 1 taxonomic ranks ]"},{"path":"/reference/subset_marker.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset microbiome markers — subset_marker","title":"Subset microbiome markers — subset_marker","text":"Subset markers based expression related columns values within marker_table slot mm.","code":""},{"path":"/reference/subset_marker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset microbiome markers — subset_marker","text":"","code":"subset_marker(mm, ...)"},{"path":"/reference/subset_marker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset microbiome markers — subset_marker","text":"mm microbiomeMarker marker_table object. ... subsetting expression passed base::subset().","code":""},{"path":"/reference/subset_marker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset microbiome markers — subset_marker","text":"subset object class mm.","code":""},{"path":"/reference/subset_marker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset microbiome markers — subset_marker","text":"","code":"data(enterotypes_arumugam) mm <- run_limma_voom(     enterotypes_arumugam,     \"Enterotype\",     contrast = c(\"Enterotype 3\", \"Enterotype 2\"),     pvalue_cutoff = 0.01,     p_adjust = \"none\" ) subset_marker(mm, pvalue < 0.005) #> microbiomeMarker-class inherited from phyloseq-class #> normalization method:              [ none ] #> microbiome marker identity method: [ limma_voom ] #> marker_table() Marker Table:       [ 8 microbiome markers with 5 variables ] #> otu_table()    OTU Table:          [ 244 taxa and  39 samples ] #> tax_table()    Taxonomy Table:     [ 244 taxa by 1 taxonomic ranks ]"},{"path":"/reference/summarize_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize taxa into a taxonomic level within each sample — summarize_taxa","title":"Summarize taxa into a taxonomic level within each sample — summarize_taxa","text":"Provides summary information representation taxonomic levels within sample.","code":""},{"path":"/reference/summarize_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize taxa into a taxonomic level within each sample — summarize_taxa","text":"","code":"summarize_taxa(ps, level = rank_names(ps)[1], absolute = TRUE, sep = \"|\")"},{"path":"/reference/summarize_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize taxa into a taxonomic level within each sample — summarize_taxa","text":"ps phyloseq-class object. level taxonomic level summarize, default top level rank ps. absolute logical, whether return absolute abundance relative abundance, default FALSE. sep character string separate taxonomic levels.","code":""},{"path":"/reference/summarize_taxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize taxa into a taxonomic level within each sample — summarize_taxa","text":"phyloseq::phyloseq object, row represents taxa, col represents taxa abundance sample.","code":""},{"path":"/reference/summarize_taxa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize taxa into a taxonomic level within each sample — summarize_taxa","text":"","code":"data(enterotypes_arumugam) summarize_taxa(enterotypes_arumugam) #> phyloseq-class experiment-level object #> otu_table()   OTU Table:         [ 244 taxa and 39 samples ] #> sample_data() Sample Data:       [ 39 samples by 9 sample variables ] #> tax_table()   Taxonomy Table:    [ 244 taxa by 1 taxonomic ranks ]"},{"path":"/reference/transform_abundances.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform the taxa abundances in otu_table sample by sample — transform_abundances","title":"Transform the taxa abundances in otu_table sample by sample — transform_abundances","text":"Transform taxa abundances otu_table sample sample, means counts sample transformed individually.","code":""},{"path":"/reference/transform_abundances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform the taxa abundances in otu_table sample by sample — transform_abundances","text":"","code":"transform_abundances(object, transform = c(\"identity\", \"log10\", \"log10p\"))"},{"path":"/reference/transform_abundances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform the taxa abundances in otu_table sample by sample — transform_abundances","text":"object otu_table, phyloseq, microbiomeMarker. transform transformation apply, options inclulde: \"identity\", return original data without transformation. \"log10\", transformation log10(object), data contains zeros transformation log10(1 + object). \"log10p\", transformation log10(1 + object).","code":""},{"path":"/reference/transform_abundances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform the taxa abundances in otu_table sample by sample — transform_abundances","text":"object matches class argument object transformed otu_table.","code":""},{"path":[]},{"path":"/reference/transform_abundances.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Transform the taxa abundances in otu_table sample by sample — transform_abundances","text":"Created Yang Cao","code":""},{"path":"/reference/transform_abundances.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform the taxa abundances in otu_table sample by sample — transform_abundances","text":"","code":"data(enterotypes_arumugam) x1 <- transform_abundances(enterotypes_arumugam) head(otu_table(x1), 10) #> OTU Table:          [10 taxa and 39 samples] #>                      taxa are rows #>       AM-AD-1   AM-AD-2    AM-F10-T1    AM-F10-T2  DA-AD-1      DA-AD-2 #> sp1  9.717275  5.248866 14375.293729 23624.536656 12871.91 3.305445e+04 #> sp2  0.000000  0.000000     0.000000     0.000000     0.00 0.000000e+00 #> sp3  0.000000  0.000000     0.000000     0.000000     0.00 0.000000e+00 #> sp4  0.000000 19.979194     2.387325     0.000000     0.00 4.561633e+00 #> sp5  0.000000  0.000000     0.000000     1.848263     0.00 0.000000e+00 #> sp6  0.000000  0.000000     0.000000     0.000000     0.00 0.000000e+00 #> sp7  0.000000  1.122736     0.000000     0.000000     0.00 1.914538e+00 #> sp8  0.000000  0.000000     0.000000     2.053141     0.00 0.000000e+00 #> sp9  0.000000  0.000000     0.000000     0.000000     0.00 5.325651e-01 #> sp10 0.000000  0.000000     0.000000     0.000000     0.00 0.000000e+00 #>         DA-AD-3    DA-AD-4     ES-AD-1 ES-AD-2  ES-AD-3      ES-AD-4  FR-AD-1 #> sp1  4685.28454 3663.47750 122318.1614 21428.3 42218.68 28485.162189 12072.42 #> sp2     0.00000    0.00000      0.0000     0.0     0.00     0.000000     0.00 #> sp3     0.00000    0.00000      0.0000     0.0     0.00     0.000000     0.00 #> sp4     0.00000   19.84843     10.3751     0.0     0.00    13.860511     0.00 #> sp5     0.00000    0.00000      0.0000     0.0     0.00     0.000000     0.00 #> sp6     0.00000    0.00000      0.0000     0.0     0.00     0.000000     0.00 #> sp7     0.00000    0.00000      0.0000     0.0     0.00     5.011567     0.00 #> sp8    11.87001    0.00000      0.0000     0.0     0.00     0.000000     0.00 #> sp9     0.00000    0.00000      0.0000     0.0     0.00     0.000000     0.00 #> sp10    0.00000    0.00000      0.0000     0.0     0.00     0.000000     0.00 #>       FR-AD-2      FR-AD-3      FR-AD-4     FR-AD-5     FR-AD-6  FR-AD-7 #> sp1  13471.03 38464.200443 12727.525867 5778.105348 4277.891136 11011.24 #> sp2      0.00     0.000000     0.000000    0.000000    0.000000     0.00 #> sp3      0.00     0.000000     0.000000    0.000000    0.000000     0.00 #> sp4      0.00     4.942673     6.832425    4.301047    4.279807     0.00 #> sp5      0.00     0.000000     0.000000    0.000000    0.000000     0.00 #> sp6      0.00     0.000000     0.000000    0.000000    0.000000     0.00 #> sp7      0.00     4.242866     5.373574    0.000000    1.836741     0.00 #> sp8      0.00     0.000000     0.000000    0.000000    0.000000     0.00 #> sp9      0.00     0.000000     1.063169    0.000000    0.000000     0.00 #> sp10     0.00     0.000000     0.000000    0.000000    0.000000     0.00 #>           FR-AD-8   IT-AD-1     IT-AD-2      IT-AD-3     IT-AD-4  IT-AD-5 #> sp1  17095.427713 20098.693 2078.358206 18339.933847 3700.198632 7781.287 #> sp2      0.000000     0.000    0.000000     0.000000    0.000000    0.000 #> sp3      0.000000     0.000    0.000000     0.000000    0.000000    0.000 #> sp4      4.243592   132.066    0.000000     4.621974    0.000000    0.000 #> sp5      0.000000     0.000    0.000000     0.000000    0.000000    0.000 #> sp6      0.000000     0.000    2.339316     0.000000    0.000000    0.000 #> sp7      0.000000     0.000    0.000000     0.000000    5.153724    0.000 #> sp8      0.000000     0.000    0.000000     4.086110    0.000000    0.000 #> sp9      0.000000     0.000    1.105480     0.000000    0.000000    0.000 #> sp10     0.000000     0.000    0.000000     0.000000    0.000000    0.000 #>         IT-AD-6      JP-AD-1     JP-AD-2     JP-AD-3      JP-AD-4     JP-AD-5 #> sp1  3627.15476 27018.481747 3183.284635 4760.172594 19149.522559 8312.770992 #> sp2     0.00000     0.000000    0.000000    2.407357     0.000000    0.000000 #> sp3     0.00000     0.000000    0.000000    0.000000     0.000000    0.000000 #> sp4    12.90517     0.000000    0.000000    8.964310     0.000000    0.000000 #> sp5     0.00000     0.000000    0.000000    0.000000     0.000000    0.000000 #> sp6     0.00000     0.000000    0.000000    0.000000     0.000000    0.000000 #> sp7     0.00000     0.000000    3.773567    0.000000     4.154563    3.990245 #> sp8     0.00000     2.219474    0.000000    0.000000     0.000000    0.000000 #> sp9     0.00000     0.000000    0.000000    0.000000     0.000000    0.000000 #> sp10    0.00000     0.000000    0.000000    0.000000     0.000000    0.000000 #>           JP-AD-6    JP-AD-7     JP-AD-8  JP-AD-9  JP-IN-1   JP-IN-2   JP-IN-3 #> sp1  29871.236576 29941.5729 27659.90830 17317.28 121.3136 0.5861948 0.9159548 #> sp2      0.000000     0.0000     0.00000     0.00   0.0000 0.0000000 0.0000000 #> sp3      0.000000     0.0000     0.00000     0.00   0.0000 0.0000000 0.0000000 #> sp4      0.000000     0.0000     0.00000     0.00   0.0000 0.0000000 0.0000000 #> sp5      0.000000     0.0000     0.00000     0.00   0.0000 0.0000000 0.0000000 #> sp6      0.000000     0.0000     0.00000     0.00   0.0000 2.8262105 0.0000000 #> sp7      9.256994   470.6165     2.02535     0.00   0.0000 0.0000000 4.1505197 #> sp8      0.000000     0.0000     0.00000     0.00   0.0000 0.0000000 0.0000000 #> sp9      0.000000     0.0000     0.00000     0.00   0.0000 0.0000000 0.0000000 #> sp10     0.000000     0.0000     0.00000     0.00   0.0000 0.0000000 0.0000000 #>       JP-IN-4 #> sp1  428.3539 #> sp2    0.0000 #> sp3    0.0000 #> sp4    0.0000 #> sp5    0.0000 #> sp6    0.0000 #> sp7    0.0000 #> sp8    0.0000 #> sp9    0.0000 #> sp10   0.0000 x2 <- transform_abundances(enterotypes_arumugam, \"log10\") #> Warning: OTU table contains zeroes. Using log10(1 + x) instead. head(otu_table(x2), 10) #> OTU Table:          [10 taxa and 39 samples] #>                      taxa are rows #>       AM-AD-1   AM-AD-2 AM-F10-T1 AM-F10-T2  DA-AD-1   DA-AD-2  DA-AD-3 #> sp1  1.030084 0.7958012 4.1576469 4.3733817 4.109677 4.5192431 3.670829 #> sp2  0.000000 0.0000000 0.0000000 0.0000000 0.000000 0.0000000 0.000000 #> sp3  0.000000 0.0000000 0.0000000 0.0000000 0.000000 0.0000000 0.000000 #> sp4  0.000000 1.3217888 0.5298569 0.0000000 0.000000 0.7452024 0.000000 #> sp5  0.000000 0.0000000 0.0000000 0.4545800 0.000000 0.0000000 0.000000 #> sp6  0.000000 0.0000000 0.0000000 0.0000000 0.000000 0.0000000 0.000000 #> sp7  0.000000 0.3268960 0.0000000 0.0000000 0.000000 0.4645697 0.000000 #> sp8  0.000000 0.0000000 0.0000000 0.4847468 0.000000 0.0000000 1.109579 #> sp9  0.000000 0.0000000 0.0000000 0.0000000 0.000000 0.1854189 0.000000 #> sp10 0.000000 0.0000000 0.0000000 0.0000000 0.000000 0.0000000 0.000000 #>       DA-AD-4  ES-AD-1  ES-AD-2  ES-AD-3   ES-AD-4 FR-AD-1  FR-AD-2   FR-AD-3 #> sp1  3.564012 5.087494 4.331008 4.625515 4.4546339 4.08183 4.129433 4.5850680 #> sp2  0.000000 0.000000 0.000000 0.000000 0.0000000 0.00000 0.000000 0.0000000 #> sp3  0.000000 0.000000 0.000000 0.000000 0.0000000 0.00000 0.000000 0.0000000 #> sp4  1.319073 1.055955 0.000000 0.000000 1.1720337 0.00000 0.000000 0.7739818 #> sp5  0.000000 0.000000 0.000000 0.000000 0.0000000 0.00000 0.000000 0.0000000 #> sp6  0.000000 0.000000 0.000000 0.000000 0.0000000 0.00000 0.000000 0.0000000 #> sp7  0.000000 0.000000 0.000000 0.000000 0.7789877 0.00000 0.000000 0.7195688 #> sp8  0.000000 0.000000 0.000000 0.000000 0.0000000 0.00000 0.000000 0.0000000 #> sp9  0.000000 0.000000 0.000000 0.000000 0.0000000 0.00000 0.000000 0.0000000 #> sp10 0.000000 0.000000 0.000000 0.000000 0.0000000 0.00000 0.000000 0.0000000 #>        FR-AD-4   FR-AD-5   FR-AD-6  FR-AD-7   FR-AD-8  IT-AD-1   IT-AD-2 #> sp1  4.1047781 3.7618606 3.6313312 4.041876 4.2329054 4.303189 3.3179293 #> sp2  0.0000000 0.0000000 0.0000000 0.000000 0.0000000 0.000000 0.0000000 #> sp3  0.0000000 0.0000000 0.0000000 0.000000 0.0000000 0.000000 0.0000000 #> sp4  0.8938962 0.7243616 0.7226181 0.000000 0.7196289 2.124067 0.0000000 #> sp5  0.0000000 0.0000000 0.0000000 0.000000 0.0000000 0.000000 0.0000000 #> sp6  0.0000000 0.0000000 0.0000000 0.000000 0.0000000 0.000000 0.5236576 #> sp7  0.8043830 0.0000000 0.4528196 0.000000 0.0000000 0.000000 0.0000000 #> sp8  0.0000000 0.0000000 0.0000000 0.000000 0.0000000 0.000000 0.0000000 #> sp9  0.3145348 0.0000000 0.0000000 0.000000 0.0000000 0.000000 0.3233512 #> sp10 0.0000000 0.0000000 0.0000000 0.000000 0.0000000 0.000000 0.0000000 #>        IT-AD-3  IT-AD-4  IT-AD-5  IT-AD-6  JP-AD-1  JP-AD-2   JP-AD-3   JP-AD-4 #> sp1  4.2634214 3.568342 3.891107 3.559686 4.431677 3.503012 3.6777139 4.2821806 #> sp2  0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.5324176 0.0000000 #> sp3  0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.0000000 0.0000000 #> sp4  0.7498888 0.000000 0.000000 1.143176 0.000000 0.000000 0.9984472 0.0000000 #> sp5  0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.0000000 0.0000000 #> sp6  0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.0000000 0.0000000 #> sp7  0.0000000 0.789138 0.000000 0.000000 0.000000 0.678843 0.0000000 0.7121918 #> sp8  0.7063857 0.000000 0.000000 0.000000 0.507785 0.000000 0.0000000 0.0000000 #> sp9  0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.0000000 0.0000000 #> sp10 0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.0000000 0.0000000 #>        JP-AD-5  JP-AD-6  JP-AD-7   JP-AD-8  JP-AD-9  JP-IN-1   JP-IN-2 #> sp1  3.9197981 4.475268 4.476289 4.4418664 4.238505 2.087475 0.2003565 #> sp2  0.0000000 0.000000 0.000000 0.0000000 0.000000 0.000000 0.0000000 #> sp3  0.0000000 0.000000 0.000000 0.0000000 0.000000 0.000000 0.0000000 #> sp4  0.0000000 0.000000 0.000000 0.0000000 0.000000 0.000000 0.0000000 #> sp5  0.0000000 0.000000 0.000000 0.0000000 0.000000 0.000000 0.0000000 #> sp6  0.0000000 0.000000 0.000000 0.0000000 0.000000 0.000000 0.5827689 #> sp7  0.6981219 1.011020 2.673589 0.4807757 0.000000 0.000000 0.0000000 #> sp8  0.0000000 0.000000 0.000000 0.0000000 0.000000 0.000000 0.0000000 #> sp9  0.0000000 0.000000 0.000000 0.0000000 0.000000 0.000000 0.0000000 #> sp10 0.0000000 0.000000 0.000000 0.0000000 0.000000 0.000000 0.0000000 #>        JP-IN-3  JP-IN-4 #> sp1  0.2823853 2.632815 #> sp2  0.0000000 0.000000 #> sp3  0.0000000 0.000000 #> sp4  0.0000000 0.000000 #> sp5  0.0000000 0.000000 #> sp6  0.0000000 0.000000 #> sp7  0.7118511 0.000000 #> sp8  0.0000000 0.000000 #> sp9  0.0000000 0.000000 #> sp10 0.0000000 0.000000 x3 <- transform_abundances(enterotypes_arumugam, \"log10p\") head(otu_table(x3), 10) #> OTU Table:          [10 taxa and 39 samples] #>                      taxa are rows #>       AM-AD-1   AM-AD-2 AM-F10-T1 AM-F10-T2  DA-AD-1   DA-AD-2  DA-AD-3 #> sp1  1.030084 0.7958012 4.1576469 4.3733817 4.109677 4.5192431 3.670829 #> sp2  0.000000 0.0000000 0.0000000 0.0000000 0.000000 0.0000000 0.000000 #> sp3  0.000000 0.0000000 0.0000000 0.0000000 0.000000 0.0000000 0.000000 #> sp4  0.000000 1.3217888 0.5298569 0.0000000 0.000000 0.7452024 0.000000 #> sp5  0.000000 0.0000000 0.0000000 0.4545800 0.000000 0.0000000 0.000000 #> sp6  0.000000 0.0000000 0.0000000 0.0000000 0.000000 0.0000000 0.000000 #> sp7  0.000000 0.3268960 0.0000000 0.0000000 0.000000 0.4645697 0.000000 #> sp8  0.000000 0.0000000 0.0000000 0.4847468 0.000000 0.0000000 1.109579 #> sp9  0.000000 0.0000000 0.0000000 0.0000000 0.000000 0.1854189 0.000000 #> sp10 0.000000 0.0000000 0.0000000 0.0000000 0.000000 0.0000000 0.000000 #>       DA-AD-4  ES-AD-1  ES-AD-2  ES-AD-3   ES-AD-4 FR-AD-1  FR-AD-2   FR-AD-3 #> sp1  3.564012 5.087494 4.331008 4.625515 4.4546339 4.08183 4.129433 4.5850680 #> sp2  0.000000 0.000000 0.000000 0.000000 0.0000000 0.00000 0.000000 0.0000000 #> sp3  0.000000 0.000000 0.000000 0.000000 0.0000000 0.00000 0.000000 0.0000000 #> sp4  1.319073 1.055955 0.000000 0.000000 1.1720337 0.00000 0.000000 0.7739818 #> sp5  0.000000 0.000000 0.000000 0.000000 0.0000000 0.00000 0.000000 0.0000000 #> sp6  0.000000 0.000000 0.000000 0.000000 0.0000000 0.00000 0.000000 0.0000000 #> sp7  0.000000 0.000000 0.000000 0.000000 0.7789877 0.00000 0.000000 0.7195688 #> sp8  0.000000 0.000000 0.000000 0.000000 0.0000000 0.00000 0.000000 0.0000000 #> sp9  0.000000 0.000000 0.000000 0.000000 0.0000000 0.00000 0.000000 0.0000000 #> sp10 0.000000 0.000000 0.000000 0.000000 0.0000000 0.00000 0.000000 0.0000000 #>        FR-AD-4   FR-AD-5   FR-AD-6  FR-AD-7   FR-AD-8  IT-AD-1   IT-AD-2 #> sp1  4.1047781 3.7618606 3.6313312 4.041876 4.2329054 4.303189 3.3179293 #> sp2  0.0000000 0.0000000 0.0000000 0.000000 0.0000000 0.000000 0.0000000 #> sp3  0.0000000 0.0000000 0.0000000 0.000000 0.0000000 0.000000 0.0000000 #> sp4  0.8938962 0.7243616 0.7226181 0.000000 0.7196289 2.124067 0.0000000 #> sp5  0.0000000 0.0000000 0.0000000 0.000000 0.0000000 0.000000 0.0000000 #> sp6  0.0000000 0.0000000 0.0000000 0.000000 0.0000000 0.000000 0.5236576 #> sp7  0.8043830 0.0000000 0.4528196 0.000000 0.0000000 0.000000 0.0000000 #> sp8  0.0000000 0.0000000 0.0000000 0.000000 0.0000000 0.000000 0.0000000 #> sp9  0.3145348 0.0000000 0.0000000 0.000000 0.0000000 0.000000 0.3233512 #> sp10 0.0000000 0.0000000 0.0000000 0.000000 0.0000000 0.000000 0.0000000 #>        IT-AD-3  IT-AD-4  IT-AD-5  IT-AD-6  JP-AD-1  JP-AD-2   JP-AD-3   JP-AD-4 #> sp1  4.2634214 3.568342 3.891107 3.559686 4.431677 3.503012 3.6777139 4.2821806 #> sp2  0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.5324176 0.0000000 #> sp3  0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.0000000 0.0000000 #> sp4  0.7498888 0.000000 0.000000 1.143176 0.000000 0.000000 0.9984472 0.0000000 #> sp5  0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.0000000 0.0000000 #> sp6  0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.0000000 0.0000000 #> sp7  0.0000000 0.789138 0.000000 0.000000 0.000000 0.678843 0.0000000 0.7121918 #> sp8  0.7063857 0.000000 0.000000 0.000000 0.507785 0.000000 0.0000000 0.0000000 #> sp9  0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.0000000 0.0000000 #> sp10 0.0000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.0000000 0.0000000 #>        JP-AD-5  JP-AD-6  JP-AD-7   JP-AD-8  JP-AD-9  JP-IN-1   JP-IN-2 #> sp1  3.9197981 4.475268 4.476289 4.4418664 4.238505 2.087475 0.2003565 #> sp2  0.0000000 0.000000 0.000000 0.0000000 0.000000 0.000000 0.0000000 #> sp3  0.0000000 0.000000 0.000000 0.0000000 0.000000 0.000000 0.0000000 #> sp4  0.0000000 0.000000 0.000000 0.0000000 0.000000 0.000000 0.0000000 #> sp5  0.0000000 0.000000 0.000000 0.0000000 0.000000 0.000000 0.0000000 #> sp6  0.0000000 0.000000 0.000000 0.0000000 0.000000 0.000000 0.5827689 #> sp7  0.6981219 1.011020 2.673589 0.4807757 0.000000 0.000000 0.0000000 #> sp8  0.0000000 0.000000 0.000000 0.0000000 0.000000 0.000000 0.0000000 #> sp9  0.0000000 0.000000 0.000000 0.0000000 0.000000 0.000000 0.0000000 #> sp10 0.0000000 0.000000 0.000000 0.0000000 0.000000 0.000000 0.0000000 #>        JP-IN-3  JP-IN-4 #> sp1  0.2823853 2.632815 #> sp2  0.0000000 0.000000 #> sp3  0.0000000 0.000000 #> sp4  0.0000000 0.000000 #> sp5  0.0000000 0.000000 #> sp6  0.0000000 0.000000 #> sp7  0.7118511 0.000000 #> sp8  0.0000000 0.000000 #> sp9  0.0000000 0.000000 #> sp10 0.0000000 0.000000"},{"path":"/news/index.html","id":"microbiomeanalysis-v102","dir":"Changelog","previous_headings":"","what":"MicrobiomeAnalysis v1.0.2","title":"MicrobiomeAnalysis v1.0.2","text":"Add differential analysis scripts microbiomeMarker. (2022-05-18)","code":""},{"path":"/news/index.html","id":"microbiomeanalysis-v101","dir":"Changelog","previous_headings":"","what":"MicrobiomeAnalysis v1.0.1","title":"MicrobiomeAnalysis v1.0.1","text":"Add import_dada2 import_qiime2. (2022-05-14) Add run_betadisper, run_PERMANOVA, run_MANTEL, run_ANOSIM run_MRPP. (2022-05-15)","code":""}]
